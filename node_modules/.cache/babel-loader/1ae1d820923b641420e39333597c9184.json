{"ast":null,"code":"const initialState = {\n  next_employee_id: 1,\n  employees: {}\n};\n\nconst employeesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'EMPLOYEE_CREATE':\n      {\n        if (action.value !== \"\") {\n          const employee = {\n            signature: action.value,\n            time_contract: 1,\n            role: 'PRACOWNIK'\n          }; // let employees = state.employees.slice();\n\n          employees[state.next_employee_id] = employee;\n          let next_employee_id = state.next_employee_id + 1;\n          return { ...state,\n            employees,\n            next_employee_id\n          };\n        } else {\n          return { ...state\n          };\n        }\n      }\n\n    case 'EMPLOYEE_UPDATE':\n      {\n        return { ...state,\n          employees: state.employees.map(employee => {\n            if (employee.id === action.id) {\n              employee[action.field] = action.value;\n              return { ...employee\n              };\n            }\n\n            return { ...employee\n            };\n          })\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default employeesReducer;","map":{"version":3,"sources":["/home/tomek/projects/carrot-hr/src/reducers/employees.js"],"names":["initialState","next_employee_id","employees","employeesReducer","state","action","type","value","employee","signature","time_contract","role","map","id","field"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACpBC,EAAAA,gBAAgB,EAAE,CADE;AAEpBC,EAAAA,SAAS,EAAE;AAFS,CAArB;;AAKA,MAAMC,gBAAgB,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAC1D,UAAQA,MAAM,CAACC,IAAf;AACC,SAAK,iBAAL;AAAwB;AACvB,YAAKD,MAAM,CAACE,KAAP,KAAiB,EAAtB,EAA2B;AAC1B,gBAAMC,QAAQ,GAAG;AAChBC,YAAAA,SAAS,EAAEJ,MAAM,CAACE,KADF;AAEhBG,YAAAA,aAAa,EAAE,CAFC;AAGhBC,YAAAA,IAAI,EAAE;AAHU,WAAjB,CAD0B,CAO1B;;AACAT,UAAAA,SAAS,CAAEE,KAAK,CAACH,gBAAR,CAAT,GAAsCO,QAAtC;AAEA,cAAIP,gBAAgB,GAAGG,KAAK,CAACH,gBAAN,GAAyB,CAAhD;AACA,iBAAO,EAAE,GAAGG,KAAL;AAAYF,YAAAA,SAAZ;AAAuBD,YAAAA;AAAvB,WAAP;AACA,SAZD,MAYO;AACN,iBAAO,EAAE,GAAGG;AAAL,WAAP;AACA;AACD;;AACD,SAAK,iBAAL;AAAwB;AACvB,eAAO,EAAE,GAAGA,KAAL;AAAYF,UAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBU,GAAhB,CAAoBJ,QAAQ,IAAI;AAC7D,gBAAIA,QAAQ,CAACK,EAAT,KAAgBR,MAAM,CAACQ,EAA3B,EAAgC;AAC/BL,cAAAA,QAAQ,CAAEH,MAAM,CAACS,KAAT,CAAR,GAA2BT,MAAM,CAACE,KAAlC;AACA,qBAAO,EAAE,GAAGC;AAAL,eAAP;AACA;;AAED,mBAAO,EAAE,GAAGA;AAAL,aAAP;AACA,WAP6B;AAAvB,SAAP;AAQA;;AACD;AACC,aAAOJ,KAAP;AA7BF;AA+BA,CAhCD;;AAkCA,eAAeD,gBAAf","sourcesContent":["const initialState = {\n\tnext_employee_id: 1,\n\temployees: {}\n}\n\nconst employeesReducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase 'EMPLOYEE_CREATE': {\n\t\t\tif ( action.value !== \"\" ) {\n\t\t\t\tconst employee = {\n\t\t\t\t\tsignature: action.value,\n\t\t\t\t\ttime_contract: 1,\n\t\t\t\t\trole: 'PRACOWNIK'\n\t\t\t\t}\n\n\t\t\t\t// let employees = state.employees.slice();\n\t\t\t\temployees[ state.next_employee_id ] = employee\n\n\t\t\t\tlet next_employee_id = state.next_employee_id + 1;\n\t\t\t\treturn { ...state, employees, next_employee_id }\n\t\t\t} else {\n\t\t\t\treturn { ...state }\n\t\t\t}\n\t\t}\n\t\tcase 'EMPLOYEE_UPDATE': {\n\t\t\treturn { ...state, employees: state.employees.map(employee => {\n\t\t\t\tif( employee.id === action.id ) {\n\t\t\t\t\temployee[ action.field ] = action.value;\n\t\t\t\t\treturn { ...employee }\n\t\t\t\t}\n\n\t\t\t\treturn { ...employee }\n\t\t\t}) }\n\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default employeesReducer;\n"]},"metadata":{},"sourceType":"module"}