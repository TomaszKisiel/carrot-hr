{"ast":null,"code":"var _jsxFileName = \"/home/tomek/projects/carrot-hr/src/Components/App.js\";\nimport React, { Component } from 'react';\nimport EmployeesTableManager from './EmployeesTableManager';\nimport SettingsManager from './SettingsManager';\nimport * as Helpers from './Helpers.js';\nimport './App.scss';\n\nconst format = require('date-format');\n\nconst moment = require('moment');\n\nconst momentDurationFormatSetup = require(\"moment-duration-format\"); // + ZROBIONE\n// ~ PRAWIE ZROBIONE\n// ! NASTĘPNE W PLANIE\n// [+] TODO 2 : Zapis i odczyt stanu menadżera tabeli do/z pliku\n// [+] TODO 3 : Zapis preferencji po edytowaniu pola, przypisanie polu oznaczenia preferencji\n// [+] TODO 4 : Auto generowanie planu pracy na podstawie preferencji\n// [ ] TODO 5 : Poprzenosic wszystkie kompo-funkcje do osobnych plików\n// [+] TODO 6 : Cieszyc sie że choć jeden projekt posuwa się do przodu :3\n// [~] TODO 7 : Przygotować szablon ustawień\n// [+] TODO 8 : Zablokować możliwość edycji dni wolnych od pracy\n// [ ] TODO 9 : Automatyczne generowanie dat według kwartału ustawionego w ustawieniach\n// [+] TODO 10 : Oznaczenie świąt\n// [ ] TODO 11 : Zwracanie dnia wolnego za sobotę.\n// [!] TODO 12 : Przygotowanie modal'a z wszystkimi ustawieniami\n// [ ] TODO 13 : Ujmowanie czasu pracy pracownikom z preferencjami\n\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.validateAllSchedules = employee_id => {\n      // Poprawność leksykalna wpisu\n      const schedules_temp = [...this.state.schedules].filter(schedule => {\n        return schedule.employee_id === employee_id;\n      });\n\n      for (const schedule of schedules_temp) {\n        schedule.validation.is_valid = true;\n        let scheduleBegin = schedule.begin;\n        let scheduleEnd = schedule.end;\n\n        if (!(Helpers.timeValidator(scheduleBegin) || Helpers.shiftValidator(scheduleBegin))) {\n          schedule.validation.is_valid = false;\n          schedule.validation.reason = \"Nieprawidłowy format czasu.\";\n        }\n\n        if (Helpers.timeValidator(scheduleBegin) && !Helpers.timeValidator(scheduleEnd)) {\n          schedule.validation.is_valid = false;\n          schedule.validation.reason = \"Nieprawidłowy format czasu.\";\n        }\n      } // Poprawność czasu pracy\n\n\n      let preventSchedule = null;\n      let currentSchedule = null;\n      const weeks = Helpers.wodge([...this.state.dates], 7, 1);\n\n      for (const week of weeks) {\n        let isWeeklyBreak = false;\n        let schedulesGap = 0; // To jest potrzebne bo jak jest w tygodniu tylko jedna zmiana nie wyłapie że pozostałe 6 dni zaspokaja przerwe 35h\n\n        for (const date of week) {\n          let isDailyBreak = false; // Przerwa między dniami pracy\n\n          if (currentSchedule) {\n            preventSchedule = currentSchedule;\n          }\n\n          currentSchedule = schedules_temp.find(schedule => {\n            return schedule.date == date && Helpers.timeValidator(schedule.begin) && Helpers.timeValidator(schedule.end);\n          }) || null;\n\n          if (currentSchedule == null) {\n            schedulesGap += 1;\n          } else {\n            schedulesGap = 0;\n          }\n\n          if (schedulesGap >= 2) {\n            isWeeklyBreak = true;\n            schedulesGap = 0;\n          } // Walidacja czasu pracy na jednej zmianie\n\n\n          if (currentSchedule) {\n            let currentScheduleBegin = moment(date + \" \" + currentSchedule.begin);\n            let currentScheduleEnd = moment(date + \" \" + currentSchedule.end);\n\n            if (currentScheduleEnd.diff(currentScheduleBegin) <= 0) {\n              currentScheduleEnd.add(1, 'days');\n            }\n\n            let diff = moment.duration(currentScheduleEnd.diff(currentScheduleBegin)).asHours();\n\n            if (diff - this.state.settings.max_daily_time > 0) {\n              currentSchedule.validation.is_valid = false;\n              currentSchedule.validation.reason = \"Przekroczono limit czasu pracy.\";\n            }\n          } // Walidacja między kolejnymi dniami\n\n\n          if (preventSchedule && currentSchedule != preventSchedule) {\n            // Wiem że to poroniona akcaj ( currentSchedule != preventSchedule ) ale z racji że w tygodniu musze sprawdzic też 8 dzień to inaczej sie nieda :(\n            let preventScheduleEnd = moment(preventSchedule.date + \" \" + preventSchedule.end);\n            let currentScheduleBegin;\n\n            if (currentSchedule) {\n              currentScheduleBegin = moment(currentSchedule.date + \" \" + currentSchedule.begin);\n            } else {\n              currentScheduleBegin = moment(date + \" \" + \"24:00\");\n            }\n\n            let diff = moment.duration(currentScheduleBegin.diff(preventScheduleEnd)).asHours();\n\n            if (diff - this.state.settings.weaky_break >= 0) {\n              isWeeklyBreak = true;\n              isDailyBreak = true;\n            } else if (diff - this.state.settings.daily_break >= 0) {\n              isDailyBreak = true;\n            }\n\n            if (!isDailyBreak) {\n              currentSchedule.validation.is_valid = false;\n              currentSchedule.validation.reason = \"Brak przerwy 13h.\";\n            }\n          }\n        }\n\n        if (!isWeeklyBreak) {\n          for (const date of week) {\n            let schedule = schedules_temp.find(schedule => {\n              return schedule.date == date;\n            }) || null;\n\n            if (schedule) {\n              schedule.validation.is_valid = false;\n              schedule.validation.reason = \"Brak przerwy 35h.\";\n            }\n          }\n        }\n      }\n\n      this.forceUpdate();\n    };\n\n    this.handleOnGenerateClick = () => {\n      const weeks = Helpers.chunk([...this.state.dates], 7);\n      const preferences = this.state.schedules.filter(schedule => {\n        return schedule.preference === true;\n      });\n      const employees = Helpers.duplicate(this.state.employees);\n      const free_days = Helpers.duplicate(this.state.settings.free_days);\n\n      for (const free_day of free_days) {\n        free_day.left = 1;\n      }\n\n      for (const employee of employees) {\n        employee.free_days = Helpers.duplicate(free_days);\n      }\n\n      for (const week of weeks) {\n        for (const date of week) {\n          // Listę preferencji na zasadzie [ employee_id: 0, shift: \"W\" ]\n          break;\n        }\n\n        break;\n      }\n    };\n\n    this.state = {\n      settings: {\n        max_daily_time: 12,\n        // Maksymalny dzienny czas pracy\n        daily_break: 13,\n        // Minimalna przerwa miedzy kolejnymi zmianami\n        weaky_break: 35,\n        // minimalna przerwa w tygodniu\n        free_indexs: [// Wpisy które ujmują 8h pracy\n        \"NP\", \"SP\", \"L4\", \"UW\", \"DU\", \"ZZ\", \"UO\"],\n        free_days: [// Ustawienia dni tygodnia, wolne i jego rodzaj\n        {\n          day: \"sun\",\n          shift: \"ND\",\n          permanent: true\n        }, {\n          day: \"sat\",\n          shift: \"SB\",\n          permanent: false\n        }],\n        min_per_shift: {\n          // Minimalna załoga pracownicza na zmianie danego dnia\n          sun: {\n            shift_1: 0,\n            shift_2: 0,\n            shift_3: 0\n          },\n          mon: {\n            shift_1: 5,\n            shift_2: 5,\n            shift_3: 0\n          },\n          tue: {\n            shift_1: 4,\n            shift_2: 4,\n            shift_3: 0\n          },\n          wed: {\n            shift_1: 5,\n            shift_2: 4,\n            shift_3: 0\n          },\n          thu: {\n            shift_1: 4,\n            shift_2: 4,\n            shift_3: 0\n          },\n          fri: {\n            shift_1: 4,\n            shift_2: 4,\n            shift_3: 0\n          },\n          sat: {\n            shift_1: 5,\n            shift_2: 4,\n            shift_3: 0\n          }\n        },\n        holidays: [// Święta ustawowo wolne\n        {\n          date: \"2020-01-01\",\n          shift: \"WS\"\n        }, {\n          date: \"2020-01-06\",\n          shift: \"WS\"\n        }, {\n          date: \"2020-04-11\",\n          shift: \"WS\"\n        }, {\n          date: \"2020-04-13\",\n          shift: \"WS\"\n        }, {\n          date: \"2020-05-01\",\n          shift: \"WS\"\n        }, {\n          date: \"2020-05-03\",\n          shift: \"WS\"\n        }, {\n          date: \"2020-05-31\",\n          shift: \"WS\"\n        }, {\n          date: \"2020-06-11\",\n          shift: \"WS\"\n        }, {\n          date: \"2020-08-15\",\n          shift: \"WS\"\n        }, {\n          date: \"2020-11-01\",\n          shift: \"WS\"\n        }, {\n          date: \"2020-11-11\",\n          shift: \"WS\"\n        }, {\n          date: \"2020-12-25\",\n          shift: \"WS\"\n        }, {\n          date: \"2020-12-16\",\n          shift: \"WS\"\n        }],\n        is_absences_layer: false,\n        is_time_layer: false\n      },\n      employee_next_id: 14,\n      employees: [// {\tid: 0,\tsignature: \"Adam Nowak\",\ttime_contract: 1,\troles: []\t},\n      {\n        id: 1,\n        signature: \"Adam Nowak\",\n        time_contract: 1,\n        roles: [\"KASJER\"]\n      }, {\n        id: 2,\n        signature: \"Hubert Lipa\",\n        time_contract: 1,\n        roles: [\"KASJER\"]\n      }, {\n        id: 3,\n        signature: \"Karolina Pama\",\n        time_contract: 1,\n        roles: [\"ZASTĘPCA\"]\n      }, {\n        id: 4,\n        signature: \"Dawid Zsiadło\",\n        time_contract: 1,\n        roles: [\"STARSZY KASJER\"]\n      }, {\n        id: 5,\n        signature: \"Andrzej Jawor\",\n        time_contract: 1,\n        roles: [\"KIEROWNIK\"]\n      }, {\n        id: 6,\n        signature: \"Tomasz Budyń\",\n        time_contract: 1,\n        roles: [\"KASJER\"]\n      }, {\n        id: 7,\n        signature: \"Joanna Kwas\",\n        time_contract: .75,\n        roles: [\"KASJER\"]\n      }, {\n        id: 8,\n        signature: \"Adam Małysz\",\n        time_contract: .75,\n        roles: [\"KASJER\"]\n      }, {\n        id: 9,\n        signature: \"Kawaii Omate\",\n        time_contract: 1,\n        roles: [\"ZASTĘPCA\"]\n      }, {\n        id: 10,\n        signature: \"Siergiej Oli\",\n        time_contract: 1,\n        roles: [\"ZASTĘPCA\"]\n      }, {\n        id: 11,\n        signature: \"Jan Polak\",\n        time_contract: 1,\n        roles: [\"KASJER\"]\n      }, {\n        id: 12,\n        signature: \"Hans Niemiec\",\n        time_contract: 1,\n        roles: [\"KASJER\"]\n      }, {\n        id: 13,\n        signature: \"John States\",\n        time_contract: .5,\n        roles: [\"KASJER\"]\n      }],\n      dates: [\"2020-04-01\", \"2020-04-02\", \"2020-04-03\", \"2020-04-04\", \"2020-04-05\", \"2020-04-06\", \"2020-04-07\", \"2020-04-08\", \"2020-04-09\", \"2020-04-10\", \"2020-04-11\", \"2020-04-12\", \"2020-04-13\", \"2020-04-14\", \"2020-04-15\", \"2020-04-16\", \"2020-04-17\", \"2020-04-18\", \"2020-04-19\", \"2020-04-20\", \"2020-04-21\", \"2020-04-22\", \"2020-04-23\", \"2020-04-24\", \"2020-04-25\", \"2020-04-26\", \"2020-04-27\", \"2020-04-28\", \"2020-04-29\", \"2020-04-30\", \"2020-05-01\", \"2020-05-02\", \"2020-05-03\", \"2020-05-04\", \"2020-05-05\", \"2020-05-06\", \"2020-05-07\", \"2020-05-08\", \"2020-05-09\", \"2020-05-10\", \"2020-05-11\", \"2020-05-12\", \"2020-05-13\", \"2020-05-14\", \"2020-05-15\", \"2020-05-16\", \"2020-05-17\", \"2020-05-18\", \"2020-05-19\", \"2020-05-20\", \"2020-05-21\", \"2020-05-22\", \"2020-05-23\", \"2020-05-24\", \"2020-05-25\", \"2020-05-26\", \"2020-05-27\", \"2020-05-28\", \"2020-05-29\", \"2020-05-30\", \"2020-05-31\", \"2020-06-01\", \"2020-06-02\", \"2020-06-03\", \"2020-06-04\", \"2020-06-05\", \"2020-06-06\", \"2020-06-07\", \"2020-06-08\", \"2020-06-09\", \"2020-06-10\", \"2020-06-11\", \"2020-06-12\", \"2020-06-13\", \"2020-06-14\", \"2020-06-15\", \"2020-06-16\", \"2020-06-17\", \"2020-06-18\", \"2020-06-19\", \"2020-06-21\", \"2020-06-22\", \"2020-06-23\", \"2020-06-24\", \"2020-06-25\", \"2020-06-26\", \"2020-06-27\", \"2020-06-28\", \"2020-06-29\", \"2020-06-30\"],\n      // preferences: [],\n      schedules: [// { \temployee_id: 0, \tdate: \"03-04-2020\", \tbegin: \"06:00:00\",\t\tend: \"14:00:00\",\tpreference: false \t},\n      ],\n      absences: [// {\temployee_id: 0,\t\tdate: \"03-04-2020\",\t\tindex: \"L4\"  }\n      ]\n    };\n    this.handleOnSaveClick = this.handleOnSaveClick.bind(this);\n    this.handleOnUploadClick = this.handleOnUploadClick.bind(this);\n    this.handleOnUploadChange = this.handleOnUploadChange.bind(this); // this.handleOnGenerateClick = this.handleOnGenerateClick.bind(this);\n\n    this.handleOnClearClick = this.handleOnClearClick.bind(this);\n    this.handleOnShowAbsencesClick = this.handleOnShowAbsencesClick.bind(this);\n    this.handleOnShowTimeClick = this.handleOnShowTimeClick.bind(this);\n    this.handleOnUndoClick = this.handleOnUndoClick.bind(this);\n    this.handleOnRedoClick = this.handleOnRedoClick.bind(this);\n    this.handleOnNewEmployee = this.handleOnNewEmployee.bind(this);\n    this.handleOnScheduleBeginChange = this.handleOnScheduleBeginChange.bind(this);\n    this.handleOnScheduleEndChange = this.handleOnScheduleEndChange.bind(this); // this.pushSchedule = this.pushSchedule.bind(this);\n  } // Tu trzeba będzie zrobić tak żeby sprawdzało tylko dla jednego pracownika bo to szkoda zachodu na niezainteresowanych\n\n\n  handleOnSaveClick() {\n    const element = document.createElement(\"a\");\n    const file = new Blob([JSON.stringify(this.state)], {\n      type: 'application/json'\n    });\n    element.href = URL.createObjectURL(file);\n    element.download = format.asString('dd-MM-yyyy hh:mm', new Date());\n    document.body.appendChild(element);\n    element.click();\n  }\n\n  handleOnUploadClick() {\n    this.refs.fileUploader.click();\n  }\n\n  handleOnUploadChange(e) {\n    var reader = new FileReader();\n\n    reader.onload = (reader => {\n      return () => {\n        const json = JSON.parse(reader.result);\n        this.setState({\n          settings: json.settings,\n          employees: json.employees,\n          employee_next_id: json.employee_next_id,\n          schedules: json.schedules,\n          absences: json.absences\n        });\n      };\n    })(reader);\n\n    reader.readAsText(e.target.files[0]);\n  }\n\n  handleOnClearClick() {\n    this.setState({\n      schedules: []\n    });\n  }\n\n  handleOnShowAbsencesClick() {\n    let settings_temp = { ...this.state.settings\n    };\n    settings_temp.is_absences_layer = !settings_temp.is_absences_layer;\n    settings_temp.is_time_layer = false;\n    this.setState({\n      settings: { ...settings_temp\n      }\n    });\n  }\n\n  handleOnShowTimeClick() {\n    let settings_temp = { ...this.state.settings\n    };\n    settings_temp.is_time_layer = !settings_temp.is_time_layer;\n    settings_temp.is_absences_layer = false;\n    this.setState({\n      settings: { ...settings_temp\n      }\n    });\n  }\n\n  handleOnUndoClick() {}\n\n  handleOnRedoClick() {}\n\n  handleOnNewEmployee(e) {\n    if (e.key === \"Enter\") {\n      const employee = {\n        id: this.state.employee_next_id,\n        signature: e.target.value,\n        time_contract: 1,\n        roles: []\n      };\n      this.setState({\n        employees: [...this.state.employees, employee],\n        employee_next_id: this.state.employee_next_id + 1\n      });\n      e.target.value = \"\";\n    }\n  }\n\n  handleOnScheduleBeginChange(e) {\n    let employee_id = e.target.getAttribute('data-employee-id');\n    let schedules_temp = [...this.state.schedules];\n    schedules_temp = schedules_temp.filter(schedule => {\n      return !(schedule.employee_id == employee_id && schedule.date == e.target.getAttribute('data-date-id'));\n    });\n    let schedule_temp = [...this.state.schedules].find(schedule => {\n      return schedule.employee_id == employee_id && schedule.date == e.target.getAttribute('data-date-id');\n    });\n\n    if (e.target.value != \"\") {\n      const schedule = {\n        employee_id: parseInt(employee_id),\n        date: e.target.getAttribute('data-date-id'),\n        begin: e.target.value.toUpperCase(),\n        end: schedule_temp ? schedule_temp.end : \"\",\n        preference: true,\n        validation: {\n          is_valid: true // reason: \"\"\n\n        }\n      };\n      this.setState({\n        schedules: [...schedules_temp, schedule]\n      }, () => this.validateAllSchedules(parseInt(employee_id)));\n    } else {\n      this.setState({\n        schedules: [...schedules_temp]\n      }, () => this.validateAllSchedules(parseInt(employee_id)));\n    }\n  }\n\n  handleOnScheduleEndChange(e) {\n    let employee_id = e.target.getAttribute('data-employee-id');\n    let schedules_temp = [...this.state.schedules].filter(schedule => {\n      return !(schedule.employee_id == employee_id && schedule.date == e.target.getAttribute('data-date-id'));\n    });\n    let schedule = [...this.state.schedules].find(schedule => {\n      return schedule.employee_id == employee_id && schedule.date == e.target.getAttribute('data-date-id');\n    });\n    schedule.end = e.target.value;\n    this.setState({\n      schedules: [...schedules_temp, schedule]\n    }, () => this.validateAllSchedules(parseInt(employee_id)));\n  } // pushSchedule( p_schedule ) { }\n  // pushSchedules( p_schedules ) { }\n  // <button className=\"btn btn-outline-primary font-weight-bold mr-2\" type=\"button\">Pokaż preferencje</button>\n  // <button className=\"btn btn-outline-danger font-weight-bold mr-4\" type=\"button\" onClick={ this.handleOnClearPreferencesClick }>Usuń preferencje</button>\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"nav\", {\n      className: \"navbar navbar-light bg-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(SettingsManager, {\n      settings: this.state.settings,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-outline-dark font-weight-bold mr-2\",\n      type: \"button\",\n      onClick: this.handleOnSaveClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 7\n      }\n    }, \"Zapisz\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-outline-dark font-weight-bold mr-4\",\n      type: \"button\",\n      onClick: this.handleOnUploadClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 7\n      }\n    }, \"Wczytaj\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-outline-success font-weight-bold mr-2\",\n      type: \"button\",\n      onClick: this.handleOnGenerateClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 10\n      }\n    }, \"Generuj plan pracy\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-outline-danger font-weight-bold mr-4\",\n      type: \"button\",\n      onClick: this.handleOnClearClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 7\n      }\n    }, \"Wyczy\\u015B\\u0107 plan pracy\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-outline-info font-weight-bold mr-2\",\n      type: \"button\",\n      onClick: this.handleOnShowAbsencesClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 7\n      }\n    }, this.state.settings.is_absences_layer === false ? \"Pokaż absencje\" : \"Ukryj absencje\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-outline-info font-weight-bold mr-4\",\n      type: \"button\",\n      onClick: this.handleOnShowTimeClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 7\n      }\n    }, this.state.settings.is_time_layer === false ? \"Pokaż czas pracy\" : \"Ukryj czas pracy\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-outline-dark font-weight-bold mr-2\",\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 7\n      }\n    }, \"Cofnij\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-outline-dark font-weight-bold mr-2\",\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 10\n      }\n    }, \"Przywr\\xF3\\u0107\"), /*#__PURE__*/React.createElement(\"input\", {\n      ref: \"fileUploader\",\n      className: \"d-none\",\n      type: \"file\",\n      onChange: this.handleOnUploadChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 7\n      }\n    }))), /*#__PURE__*/React.createElement(EmployeesTableManager, {\n      settings: this.state.settings,\n      employees: this.state.employees,\n      dates: this.state.dates,\n      schedules: this.state.schedules,\n      onNewEmployee: this.handleOnNewEmployee,\n      onScheduleBeginChange: this.handleOnScheduleBeginChange,\n      onScheduleEndChange: this.handleOnScheduleEndChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/tomek/projects/carrot-hr/src/Components/App.js"],"names":["React","Component","EmployeesTableManager","SettingsManager","Helpers","format","require","moment","momentDurationFormatSetup","App","constructor","props","validateAllSchedules","employee_id","schedules_temp","state","schedules","filter","schedule","validation","is_valid","scheduleBegin","begin","scheduleEnd","end","timeValidator","shiftValidator","reason","preventSchedule","currentSchedule","weeks","wodge","dates","week","isWeeklyBreak","schedulesGap","date","isDailyBreak","find","currentScheduleBegin","currentScheduleEnd","diff","add","duration","asHours","settings","max_daily_time","preventScheduleEnd","weaky_break","daily_break","forceUpdate","handleOnGenerateClick","chunk","preferences","preference","employees","duplicate","free_days","free_day","left","employee","free_indexs","day","shift","permanent","min_per_shift","sun","shift_1","shift_2","shift_3","mon","tue","wed","thu","fri","sat","holidays","is_absences_layer","is_time_layer","employee_next_id","id","signature","time_contract","roles","absences","handleOnSaveClick","bind","handleOnUploadClick","handleOnUploadChange","handleOnClearClick","handleOnShowAbsencesClick","handleOnShowTimeClick","handleOnUndoClick","handleOnRedoClick","handleOnNewEmployee","handleOnScheduleBeginChange","handleOnScheduleEndChange","element","document","createElement","file","Blob","JSON","stringify","type","href","URL","createObjectURL","download","asString","Date","body","appendChild","click","refs","fileUploader","e","reader","FileReader","onload","json","parse","result","setState","readAsText","target","files","settings_temp","key","value","getAttribute","schedule_temp","parseInt","toUpperCase","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport EmployeesTableManager from './EmployeesTableManager';\nimport SettingsManager from './SettingsManager';\nimport * as Helpers from'./Helpers.js';\nimport './App.scss';\n\nconst format = require('date-format');\nconst moment = require('moment');\nconst momentDurationFormatSetup = require(\"moment-duration-format\");\n\n// + ZROBIONE\n// ~ PRAWIE ZROBIONE\n// ! NASTĘPNE W PLANIE\n\n// [+] TODO 2 : Zapis i odczyt stanu menadżera tabeli do/z pliku\n// [+] TODO 3 : Zapis preferencji po edytowaniu pola, przypisanie polu oznaczenia preferencji\n// [+] TODO 4 : Auto generowanie planu pracy na podstawie preferencji\n// [ ] TODO 5 : Poprzenosic wszystkie kompo-funkcje do osobnych plików\n// [+] TODO 6 : Cieszyc sie że choć jeden projekt posuwa się do przodu :3\n// [~] TODO 7 : Przygotować szablon ustawień\n// [+] TODO 8 : Zablokować możliwość edycji dni wolnych od pracy\n// [ ] TODO 9 : Automatyczne generowanie dat według kwartału ustawionego w ustawieniach\n// [+] TODO 10 : Oznaczenie świąt\n// [ ] TODO 11 : Zwracanie dnia wolnego za sobotę.\n// [!] TODO 12 : Przygotowanie modal'a z wszystkimi ustawieniami\n// [ ] TODO 13 : Ujmowanie czasu pracy pracownikom z preferencjami\n\n\n\nexport default class App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tsettings: {\n\t\t\t\tmax_daily_time: 12,\t// Maksymalny dzienny czas pracy\n\t\t\t\tdaily_break: 13, // Minimalna przerwa miedzy kolejnymi zmianami\n\t\t\t\tweaky_break: 35, // minimalna przerwa w tygodniu\n\t\t\t\tfree_indexs: [ // Wpisy które ujmują 8h pracy\n\t\t\t\t\t\"NP\", \"SP\", \"L4\", \"UW\", \"DU\", \"ZZ\", \"UO\"\n\t\t\t\t],\n\t\t\t\tfree_days: [  // Ustawienia dni tygodnia, wolne i jego rodzaj\n\t\t\t\t\t{\tday: \"sun\",\t\tshift: \"ND\", \tpermanent: true,\t},\n\t\t\t\t\t{\tday: \"sat\",\t\tshift: \"SB\",\tpermanent: false,\t},\n\t\t\t\t],\n\t\t\t\tmin_per_shift: { // Minimalna załoga pracownicza na zmianie danego dnia\n\t\t\t\t\tsun: {\n\t\t\t\t\t\tshift_1: 0,\n\t\t\t\t\t\tshift_2: 0,\n\t\t\t\t\t\tshift_3: 0,\n\t\t\t\t\t},\n\t\t\t\t\tmon: {\n\t\t\t\t\t\tshift_1: 5,\n\t\t\t\t\t\tshift_2: 5,\n\t\t\t\t\t\tshift_3: 0,\n\t\t\t\t\t},\n\t\t\t\t\ttue: {\n\t\t\t\t\t\tshift_1: 4,\n\t\t\t\t\t\tshift_2: 4,\n\t\t\t\t\t\tshift_3: 0,\n\t\t\t\t\t},\n\t\t\t\t\twed: {\n\t\t\t\t\t\tshift_1: 5,\n\t\t\t\t\t\tshift_2: 4,\n\t\t\t\t\t\tshift_3: 0,\n\t\t\t\t\t},\n\t\t\t\t\tthu: {\n\t\t\t\t\t\tshift_1: 4,\n\t\t\t\t\t\tshift_2: 4,\n\t\t\t\t\t\tshift_3: 0,\n\t\t\t\t\t},\n\t\t\t\t\tfri: {\n\t\t\t\t\t\tshift_1: 4,\n\t\t\t\t\t\tshift_2: 4,\n\t\t\t\t\t\tshift_3: 0,\n\t\t\t\t\t},\n\t\t\t\t\tsat: {\n\t\t\t\t\t\tshift_1: 5,\n\t\t\t\t\t\tshift_2: 4,\n\t\t\t\t\t\tshift_3: 0,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tholidays: [ // Święta ustawowo wolne\n\t\t\t\t\t{ \tdate: \"2020-01-01\", \tshift: \"WS\" \t},\n\t\t\t\t\t{ \tdate: \"2020-01-06\", \tshift: \"WS\" \t},\n\t\t\t\t\t{ \tdate: \"2020-04-11\", \tshift: \"WS\" \t},\n\t\t\t\t\t{ \tdate: \"2020-04-13\", \tshift: \"WS\" \t},\n\t\t\t\t\t{ \tdate: \"2020-05-01\", \tshift: \"WS\" \t},\n\t\t\t\t\t{ \tdate: \"2020-05-03\", \tshift: \"WS\" \t},\n\t\t\t\t\t{ \tdate: \"2020-05-31\", \tshift: \"WS\" \t},\n\t\t\t\t\t{ \tdate: \"2020-06-11\", \tshift: \"WS\" \t},\n\t\t\t\t\t{ \tdate: \"2020-08-15\", \tshift: \"WS\" \t},\n\t\t\t\t\t{ \tdate: \"2020-11-01\", \tshift: \"WS\" \t},\n\t\t\t\t\t{ \tdate: \"2020-11-11\", \tshift: \"WS\" \t},\n\t\t\t\t\t{ \tdate: \"2020-12-25\", \tshift: \"WS\" \t},\n\t\t\t\t\t{ \tdate: \"2020-12-16\", \tshift: \"WS\" \t},\n\t\t\t\t],\n\t\t\t\tis_absences_layer: false,\n\t\t\t\tis_time_layer: false,\n\t\t\t},\n\t\t\temployee_next_id: 14,\n\t\t\temployees: [\n\t\t\t\t// {\tid: 0,\tsignature: \"Adam Nowak\",\ttime_contract: 1,\troles: []\t},\n\t\t\t\t{\tid: 1,\tsignature: \"Adam Nowak\",\ttime_contract: 1,\troles: [ \"KASJER\" ]\t},\n\t\t\t\t{\tid: 2,\tsignature: \"Hubert Lipa\",\ttime_contract: 1,\troles: [ \"KASJER\" ]\t},\n\t\t\t\t{\tid: 3,\tsignature: \"Karolina Pama\",\ttime_contract: 1,\troles: [ \"ZASTĘPCA\" ]\t},\n\t\t\t\t{\tid: 4,\tsignature: \"Dawid Zsiadło\",\ttime_contract: 1,\troles: [ \"STARSZY KASJER\" ]\t},\n\t\t\t\t{\tid: 5,\tsignature: \"Andrzej Jawor\",\ttime_contract: 1,\troles: [ \"KIEROWNIK\" ]\t},\n\t\t\t\t{\tid: 6,\tsignature: \"Tomasz Budyń\",\ttime_contract: 1,\troles: [ \"KASJER\" ]\t},\n\t\t\t\t{\tid: 7,\tsignature: \"Joanna Kwas\",\ttime_contract: .75,\troles: [ \"KASJER\" ]\t},\n\t\t\t\t{\tid: 8,\tsignature: \"Adam Małysz\",\ttime_contract: .75,\troles: [ \"KASJER\" ]\t},\n\t\t\t\t{\tid: 9,\tsignature: \"Kawaii Omate\",\ttime_contract: 1,\troles: [ \"ZASTĘPCA\" ]\t},\n\t\t\t\t{\tid: 10,\tsignature: \"Siergiej Oli\",\ttime_contract: 1,\troles: [ \"ZASTĘPCA\" ]\t},\n\t\t\t\t{\tid: 11,\tsignature: \"Jan Polak\",\t\ttime_contract: 1,\troles: [ \"KASJER\" ]\t},\n\t\t\t\t{\tid: 12,\tsignature: \"Hans Niemiec\",\ttime_contract: 1,\troles: [ \"KASJER\" ]\t},\n\t\t\t\t{\tid: 13,\tsignature: \"John States\",\ttime_contract: .5,\troles: [ \"KASJER\" ]\t},\n\t\t\t],\n\t\t\tdates: [\n\t\t\t\t\"2020-04-01\", \"2020-04-02\", \"2020-04-03\", \"2020-04-04\", \"2020-04-05\", \"2020-04-06\", \"2020-04-07\",\n\t\t\t\t\"2020-04-08\", \"2020-04-09\", \"2020-04-10\", \"2020-04-11\", \"2020-04-12\", \"2020-04-13\", \"2020-04-14\",\n\t\t\t\t\"2020-04-15\", \"2020-04-16\", \"2020-04-17\", \"2020-04-18\", \"2020-04-19\", \"2020-04-20\", \"2020-04-21\",\n\t\t\t\t\"2020-04-22\", \"2020-04-23\", \"2020-04-24\", \"2020-04-25\", \"2020-04-26\", \"2020-04-27\", \"2020-04-28\",\n\t\t\t\t\"2020-04-29\", \"2020-04-30\", \"2020-05-01\", \"2020-05-02\", \"2020-05-03\", \"2020-05-04\", \"2020-05-05\",\n\t\t\t \t\"2020-05-06\", \"2020-05-07\", \"2020-05-08\", \"2020-05-09\", \"2020-05-10\", \"2020-05-11\", \"2020-05-12\",\n\t\t\t \t\"2020-05-13\", \"2020-05-14\", \"2020-05-15\", \"2020-05-16\", \"2020-05-17\", \"2020-05-18\", \"2020-05-19\",\n\t\t\t \t\"2020-05-20\", \"2020-05-21\", \"2020-05-22\", \"2020-05-23\", \"2020-05-24\", \"2020-05-25\", \"2020-05-26\",\n\t\t\t\t\"2020-05-27\", \"2020-05-28\", \"2020-05-29\", \"2020-05-30\", \"2020-05-31\", \"2020-06-01\", \"2020-06-02\",\n\t\t\t\t\"2020-06-03\", \"2020-06-04\", \"2020-06-05\", \"2020-06-06\", \"2020-06-07\", \"2020-06-08\", \"2020-06-09\",\n\t\t\t\t\"2020-06-10\", \"2020-06-11\", \"2020-06-12\", \"2020-06-13\", \"2020-06-14\", \"2020-06-15\", \"2020-06-16\",\n\t\t\t\t\"2020-06-17\", \"2020-06-18\", \"2020-06-19\", \"2020-06-21\", \"2020-06-22\", \"2020-06-23\", \"2020-06-24\",\n\t\t\t\t\"2020-06-25\", \"2020-06-26\", \"2020-06-27\", \"2020-06-28\", \"2020-06-29\", \"2020-06-30\",\n\t\t\t],\n\t\t\t// preferences: [],\n\t\t\tschedules: [\n\t\t\t\t// { \temployee_id: 0, \tdate: \"03-04-2020\", \tbegin: \"06:00:00\",\t\tend: \"14:00:00\",\tpreference: false \t},\n\t\t\t],\n\t\t\tabsences: [\n\t\t\t\t// {\temployee_id: 0,\t\tdate: \"03-04-2020\",\t\tindex: \"L4\"  }\n\t\t\t]\n\t\t}\n\n\t\tthis.handleOnSaveClick = this.handleOnSaveClick.bind(this);\n\t\tthis.handleOnUploadClick = this.handleOnUploadClick.bind(this);\n\t\tthis.handleOnUploadChange = this.handleOnUploadChange.bind(this);\n\n\t\t// this.handleOnGenerateClick = this.handleOnGenerateClick.bind(this);\n\t\tthis.handleOnClearClick = this.handleOnClearClick.bind(this);\n\n\t\tthis.handleOnShowAbsencesClick = this.handleOnShowAbsencesClick.bind(this);\n\t\tthis.handleOnShowTimeClick = this.handleOnShowTimeClick.bind(this);\n\n\t\tthis.handleOnUndoClick = this.handleOnUndoClick.bind(this);\n\t\tthis.handleOnRedoClick = this.handleOnRedoClick.bind(this);\n\n\t\tthis.handleOnNewEmployee = this.handleOnNewEmployee.bind(this);\n\n\t\tthis.handleOnScheduleBeginChange = this.handleOnScheduleBeginChange.bind(this);\n\t\tthis.handleOnScheduleEndChange = this.handleOnScheduleEndChange.bind(this);\n\t\t// this.pushSchedule = this.pushSchedule.bind(this);\n\t}\n\n\t// Tu trzeba będzie zrobić tak żeby sprawdzało tylko dla jednego pracownika bo to szkoda zachodu na niezainteresowanych\n\tvalidateAllSchedules = (employee_id) => {\n\n\t\t// Poprawność leksykalna wpisu\n\t\tconst schedules_temp = [ ...this.state.schedules ].filter(schedule => { return ( schedule.employee_id === employee_id ) } );\n\t\tfor ( const schedule of schedules_temp ) {\n\t\t\tschedule.validation.is_valid = true;\n\n\t\t\tlet scheduleBegin = schedule.begin;\n\t\t\tlet scheduleEnd = schedule.end;\n\n\t\t\tif ( ! ( Helpers.timeValidator( scheduleBegin ) || Helpers.shiftValidator( scheduleBegin ) ) ) {\n\t\t\t\tschedule.validation.is_valid = false;\n\t\t\t\tschedule.validation.reason = \"Nieprawidłowy format czasu.\"\n\t\t\t}\n\n\t\t\tif ( Helpers.timeValidator( scheduleBegin ) && ! Helpers.timeValidator( scheduleEnd ) ) {\n\t\t\t\tschedule.validation.is_valid = false;\n\t\t\t\tschedule.validation.reason = \"Nieprawidłowy format czasu.\"\n\t\t\t}\n\t\t}\n\n\t\t// Poprawność czasu pracy\n\t\tlet preventSchedule = null;\n\t\tlet currentSchedule = null;\n\t\tconst weeks = Helpers.wodge( [ ...this.state.dates ], 7, 1);\n\t\tfor ( const week of weeks ) {\n\n\t\t\tlet isWeeklyBreak = false;\n\t\t\tlet schedulesGap = 0; // To jest potrzebne bo jak jest w tygodniu tylko jedna zmiana nie wyłapie że pozostałe 6 dni zaspokaja przerwe 35h\n\t\t\tfor ( const date of week ) {\n\t\t\t\tlet isDailyBreak = false; // Przerwa między dniami pracy\n\n\t\t\t\tif ( currentSchedule ) {\n\t\t\t\t\tpreventSchedule = currentSchedule;\n\t\t\t\t}\n\n\t\t\t\tcurrentSchedule = schedules_temp.find(schedule => { return ( schedule.date == date && Helpers.timeValidator( schedule.begin ) && Helpers.timeValidator( schedule.end ) ) } ) || null;\n\t\t\t\tif ( currentSchedule == null ) {\n\t\t\t\t\tschedulesGap += 1;\n\t\t\t\t} else {\n\t\t\t\t\tschedulesGap = 0;\n\t\t\t\t}\n\n\t\t\t\tif ( schedulesGap >= 2 ) {\n\t\t\t\t\tisWeeklyBreak = true;\n\t\t\t\t\tschedulesGap = 0;\n\t\t\t\t}\n\n\t\t\t\t// Walidacja czasu pracy na jednej zmianie\n\t\t\t\tif ( currentSchedule ) {\n\t\t\t\t\tlet currentScheduleBegin = moment(date + \" \" + currentSchedule.begin)\n\t\t\t\t\tlet currentScheduleEnd = moment(date + \" \" + currentSchedule.end)\n\n\t\t\t\t\tif ( currentScheduleEnd.diff(currentScheduleBegin) <= 0 ) {\n\t\t\t\t\t\tcurrentScheduleEnd.add(1, 'days');\n\t\t\t\t\t}\n\n\t\t\t\t\tlet diff = moment.duration( currentScheduleEnd.diff( currentScheduleBegin ) ).asHours();\n\t\t\t\t\tif ( diff - this.state.settings.max_daily_time > 0 ) {\n\t\t\t\t\t\tcurrentSchedule.validation.is_valid = false;\n\t\t\t\t\t\tcurrentSchedule.validation.reason = \"Przekroczono limit czasu pracy.\";\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Walidacja między kolejnymi dniami\n\t\t\t\tif ( preventSchedule && ( currentSchedule != preventSchedule ) ) { // Wiem że to poroniona akcaj ( currentSchedule != preventSchedule ) ale z racji że w tygodniu musze sprawdzic też 8 dzień to inaczej sie nieda :(\n\t\t\t\t\tlet preventScheduleEnd = moment(preventSchedule.date + \" \" + preventSchedule.end);\n\t\t\t\t\tlet currentScheduleBegin;\n\t\t\t\t\tif ( currentSchedule ) {\n\t\t\t\t\t\tcurrentScheduleBegin = moment(currentSchedule.date + \" \" + currentSchedule.begin);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcurrentScheduleBegin = moment(date + \" \" + \"24:00\");\n\t\t\t\t\t}\n\n\t\t\t\t\tlet diff = moment.duration( currentScheduleBegin.diff( preventScheduleEnd ) ).asHours();\n\t\t\t\t\tif ( diff - this.state.settings.weaky_break >= 0 ) {\n\t\t\t\t\t\tisWeeklyBreak = true;\n\t\t\t\t\t\tisDailyBreak = true;\n\t\t\t\t\t} else if ( diff - this.state.settings.daily_break >= 0 ) {\n\t\t\t\t\t\tisDailyBreak = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! isDailyBreak ) {\n\t\t\t\t\t\tcurrentSchedule.validation.is_valid = false;\n\t\t\t\t\t\tcurrentSchedule.validation.reason = \"Brak przerwy 13h.\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( ! isWeeklyBreak ) {\n\t\t\t\tfor ( const date of week ) {\n\t\t\t\t\tlet schedule = schedules_temp.find(schedule => { return ( schedule.date == date ) } ) || null;\n\t\t\t\t\tif ( schedule ) {\n\t\t\t\t\t\tschedule.validation.is_valid = false;\n\t\t\t\t\t\tschedule.validation.reason = \"Brak przerwy 35h.\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.forceUpdate();\n\t}\n\n\thandleOnSaveClick() {\n\t\tconst element = document.createElement(\"a\");\n\t\tconst file = new Blob([JSON.stringify(this.state)], {type: 'application/json'});\n\t\telement.href = URL.createObjectURL(file);\n\t\telement.download = format.asString('dd-MM-yyyy hh:mm', new Date());\n\t\tdocument.body.appendChild(element);\n\t\telement.click();\n\t}\n\n\n\thandleOnUploadClick() {\n\t\tthis.refs.fileUploader.click();\n\t}\n\n\thandleOnUploadChange(e) {\n\t\tvar reader = new FileReader();\n\t\treader.onload = ((reader) => {\n\t\t\treturn () => {\n\t\t\t\tconst json = JSON.parse(reader.result);\n\t\t\t\tthis.setState( {\n\t\t\t\t\tsettings: json.settings,\n\t\t\t\t\temployees: json.employees,\n\t\t\t\t\temployee_next_id: json.employee_next_id,\n\t\t\t\t\tschedules: json.schedules,\n\t\t\t\t\tabsences: json.absences,\n\t\t\t\t} );\n\t\t\t}\n\t\t})(reader);\n\n\t\treader.readAsText(e.target.files[0]);\n\t}\n\n\thandleOnGenerateClick = () => {\n\t\tconst weeks = Helpers.chunk([...this.state.dates], 7);\n\t\tconst preferences = this.state.schedules.filter(schedule => { return schedule.preference === true } );\n\n\t\tconst employees = Helpers.duplicate( this.state.employees );\n\t\tconst free_days = Helpers.duplicate( this.state.settings.free_days );\n\t\tfor ( const free_day of free_days ) {\n\t\t\tfree_day.left = 1;\n\t\t}\n\t\tfor ( const employee of employees ) {\n\t\t\temployee.free_days = Helpers.duplicate( free_days );\n\t\t}\n\n\t\tfor ( const week of weeks ) {\n\n\t\t\tfor ( const date of week ) {\n\n\t\t\t\t// Listę preferencji na zasadzie [ employee_id: 0, shift: \"W\" ]\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tbreak;\n\t\t}\n\t}\n\n\thandleOnClearClick() {\n\t\tthis.setState( { schedules: [ ]} )\n\t}\n\n\thandleOnShowAbsencesClick() {\n\t\tlet settings_temp = { ...this.state.settings }\n\t\tsettings_temp.is_absences_layer = !settings_temp.is_absences_layer;\n\t\tsettings_temp.is_time_layer = false;\n\t\tthis.setState( { settings: { ...settings_temp } } );\n\t}\n\n\thandleOnShowTimeClick() {\n\t\tlet settings_temp = { ...this.state.settings }\n\t\tsettings_temp.is_time_layer = !settings_temp.is_time_layer;\n\t\tsettings_temp.is_absences_layer = false;\n\t\tthis.setState( { settings: { ...settings_temp } } );\n\t}\n\n\thandleOnUndoClick() { }\n\n\thandleOnRedoClick() { }\n\n\thandleOnNewEmployee(e) {\n\t\tif (e.key === \"Enter\") {\n\t\t\tconst employee = {\n\t\t\t\tid: this.state.employee_next_id,\n\t\t\t\tsignature: e.target.value,\n\t\t\t\ttime_contract: 1,\n\t\t\t\troles: []\n\t\t\t}\n\n\t\t\tthis.setState( { employees: [ ...this.state.employees, employee], employee_next_id: this.state.employee_next_id + 1 } );\n\t\t\te.target.value = \"\";\n\t\t}\n\t}\n\n\thandleOnScheduleBeginChange(e) {\n\t\tlet employee_id = e.target.getAttribute('data-employee-id');\n\n\t\tlet schedules_temp = [ ...this.state.schedules ]\n\t\tschedules_temp = schedules_temp.filter(schedule => { return !(\n\t\t\tschedule.employee_id == employee_id &&\n\t\t\tschedule.date == e.target.getAttribute('data-date-id')\n\t\t)});\n\n\t\tlet schedule_temp = [ ...this.state.schedules ].find(schedule => { return (\n\t\t\tschedule.employee_id == employee_id &&\n\t\t\tschedule.date == e.target.getAttribute('data-date-id')\n\t\t)});\n\n\t\tif ( e.target.value != \"\" ) {\n\t\t\tconst schedule = {\n\t\t\t\temployee_id: parseInt( employee_id ),\n\t\t\t\tdate: e.target.getAttribute('data-date-id'),\n\t\t\t\tbegin: e.target.value.toUpperCase(),\n\t\t\t\tend: ( schedule_temp ) ? schedule_temp.end : \"\",\n\t\t\t\tpreference: true,\n\t\t\t\tvalidation: {\n\t\t\t\t\tis_valid: true,\n\t\t\t\t\t// reason: \"\"\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.setState( { schedules: [ ...schedules_temp, schedule ] }, () => this.validateAllSchedules( parseInt( employee_id ) ) );\n\t\t} else {\n\t\t\tthis.setState( { schedules: [ ...schedules_temp ] }, () => this.validateAllSchedules( parseInt( employee_id ) ) );\n\t\t}\n\t}\n\n\thandleOnScheduleEndChange(e) {\n\t\tlet employee_id = e.target.getAttribute('data-employee-id');\n\n\t\tlet schedules_temp = [ ...this.state.schedules ].filter(schedule => { return !(\n\t\t\tschedule.employee_id == employee_id &&\n\t\t\tschedule.date == e.target.getAttribute('data-date-id')\n\t\t)});\n\n\t\tlet schedule = [ ...this.state.schedules ].find(schedule => { return (\n\t\t\tschedule.employee_id == employee_id &&\n\t\t\tschedule.date == e.target.getAttribute('data-date-id')\n\t\t)});\n\t\tschedule.end = e.target.value;\n\n\t\tthis.setState( { schedules: [ ...schedules_temp, schedule ] }, () => this.validateAllSchedules( parseInt( employee_id ) ) );\n\t}\n\n\t// pushSchedule( p_schedule ) { }\n\n\t// pushSchedules( p_schedules ) { }\n\n\n\n\t// <button className=\"btn btn-outline-primary font-weight-bold mr-2\" type=\"button\">Pokaż preferencje</button>\n\t// <button className=\"btn btn-outline-danger font-weight-bold mr-4\" type=\"button\" onClick={ this.handleOnClearPreferencesClick }>Usuń preferencje</button>\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<nav className=\"navbar navbar-light bg-light\">\n\t\t\t\t\t<form>\n\t\t\t\t\t\t<SettingsManager settings={ this.state.settings } />\n\t\t\t\t\t\t<button className=\"btn btn-outline-dark font-weight-bold mr-2\" type=\"button\" onClick={ this.handleOnSaveClick }>Zapisz</button>\n\t\t\t\t\t\t<button className=\"btn btn-outline-dark font-weight-bold mr-4\" type=\"button\" onClick={ this.handleOnUploadClick }>Wczytaj</button>\n\t\t\t\t    \t<button className=\"btn btn-outline-success font-weight-bold mr-2\" type=\"button\" onClick={ this.handleOnGenerateClick }>Generuj plan pracy</button>\n\t\t\t\t\t\t<button className=\"btn btn-outline-danger font-weight-bold mr-4\" type=\"button\" onClick={ this.handleOnClearClick }>Wyczyść plan pracy</button>\n\t\t\t\t\t\t<button className=\"btn btn-outline-info font-weight-bold mr-2\" type=\"button\" onClick={ this.handleOnShowAbsencesClick }>\n\t\t\t\t\t\t\t{ ( this.state.settings.is_absences_layer === false ) ? \"Pokaż absencje\" : \"Ukryj absencje\" }\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button className=\"btn btn-outline-info font-weight-bold mr-4\" type=\"button\" onClick={ this.handleOnShowTimeClick }>\n\t\t\t\t\t\t\t{ ( this.state.settings.is_time_layer === false ) ? \"Pokaż czas pracy\" : \"Ukryj czas pracy\" }\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button className=\"btn btn-outline-dark font-weight-bold mr-2\" type=\"button\">Cofnij</button>\n\t\t\t\t    \t<button className=\"btn btn-outline-dark font-weight-bold mr-2\" type=\"button\">Przywróć</button>\n\t\t\t\t\t\t<input ref=\"fileUploader\" className=\"d-none\" type=\"file\" onChange={ this.handleOnUploadChange }/>\n\t\t\t\t\t</form>\n\t\t\t\t</nav>\n\t\t\t\t<EmployeesTableManager settings={ this.state.settings } employees={this.state.employees} dates={this.state.dates} schedules={this.state.schedules} onNewEmployee={this.handleOnNewEmployee} onScheduleBeginChange={this.handleOnScheduleBeginChange} onScheduleEndChange={this.handleOnScheduleEndChange}/>\n\t\t\t</>\n\t    );\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}