{"ast":null,"code":"var _jsxFileName = \"/home/tomek/Social_Media/CarrotStudio/CarrotHR/src/Components/EmployeesTableManager.js\";\nimport React, { Component } from 'react';\n\nconst format = require('date-format');\n\nconst moment = require('moment');\n\nconst momentDurationFormatSetup = require(\"moment-duration-format\");\n\nconst days = [\"sun\", \"mon\", \"tue\", \"wed\", \"thu\", \"fri\", \"sat\"];\n\nlet getDayName = date => {\n  let dt = new Date(date);\n  return days[dt.getDay()];\n};\n\nconst days_PL = [\"ND\", \"PN\", \"WT\", \"ŚR\", \"CZ\", \"PT\", \"SB\"];\n\nlet getPolishDayName = date => {\n  let dt = new Date(date);\n  return days_PL[dt.getDay()];\n};\n\nexport default class EmployeesTableManager extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  tableHeader() {\n    let tr = [];\n    tr.push( /*#__PURE__*/React.createElement(\"th\", {\n      key: \"number-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    }, \"#\"));\n    tr.push( /*#__PURE__*/React.createElement(\"th\", {\n      className: \"border-right\",\n      key: \"signature-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }, \"Pracownik\"));\n\n    for (const date of this.props.dates) {\n      tr.push( /*#__PURE__*/React.createElement(\"th\", {\n        \"data-date\": date,\n        key: date,\n        className: \"border-right text-center p-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        class: \"px-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 90\n        }\n      }, format.asString('dd.MM', new Date(date))), /*#__PURE__*/React.createElement(\"hr\", {\n        class: \"m-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 160\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        class: \"px-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 177\n        }\n      }, getPolishDayName(date))));\n    }\n\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: \"tr-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }\n    }, tr);\n  }\n\n  tableData() {\n    let tbody = [];\n\n    for (const [i, employee] of this.props.employees.entries()) {\n      const tr = [];\n      tr.push( /*#__PURE__*/React.createElement(\"th\", {\n        className: \"align-middle\",\n        key: \"number-\" + employee.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 12\n        }\n      }, i + 1));\n      tr.push( /*#__PURE__*/React.createElement(\"th\", {\n        className: \"border-right align-middle\",\n        key: \"signature-\" + employee.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 12\n        }\n      }, employee.signature));\n\n      for (const date of this.props.dates) {\n        const schedule = this.props.schedules.find(schedule => {\n          return schedule.employee_id == employee.id && schedule.date == date;\n        });\n        let tdClassName = \"border-right py-1 align-middle\";\n        let inputClassName = \"carrotHR__input carrotHR__input--shift form-control\";\n        let isBeginProperlyFormated = true;\n        let timeValidator = /^([0-1]?[0-9]|2[0-4]):([0-5][0-9])(:[0-5][0-9])?$/;\n\n        if (begin && ![\"W\", \"PN\", \"WT\", \"ŚR\", \"CZ\", \"PT\", \"SB\", \"ND\"].includes(begin)) {\n          if (!timeValidator.test(begin)) {\n            isBeginProperlyFormated = false;\n          }\n        }\n\n        if (this.props.settings.is_absences_layer) {} else if (this.props.settings.is_time_layer) {} else {\n          if (getDayName(date) == \"sun\") tdClassName += \" carrotHR__field--sunday\";\n          if (schedule && schedule.preference) tdClassName += \" carrotHR__field--preference\";\n          if (props.settings.holidays.find(holiday => {\n            return holiday.date == date;\n          })) tdClassName += \" carrotHR__field--holiday\";\n          if (isBeginProperlyFormated === false) tdClassName += \" carrotHR__field--warning\"; // <input data-date-id={date} data-employee-id={employee.id} className={ endInputClassName } onChange={ (e) => props.onScheduleChange(e, \"end\") } value={ end } />\n\n          tr.push( /*#__PURE__*/React.createElement(\"td\", {\n            id: employee.id + \":\" + date,\n            key: employee.id + \":\" + date,\n            className: tdClassName,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 7\n            }\n          }, /*#__PURE__*/React.createElement(\"input\", {\n            \"data-date-id\": date,\n            \"data-employee-id\": employee.id,\n            className: inputClassName,\n            onChange: props.onScheduleBeginChange,\n            value: begin,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 8\n            }\n          }), begin && isBeginProperlyFormated && ![\"W\", \"PN\", \"WT\", \"ŚR\", \"CZ\", \"PT\", \"SB\", \"ND\"].includes(begin) ? /*#__PURE__*/React.createElement(\"input\", {\n            \"data-date-id\": date,\n            \"data-employee-id\": employee.id,\n            className: inputClassName,\n            onChange: props.onScheduleEndChange,\n            value: end,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 9\n            }\n          }) : \"\"));\n        }\n      }\n\n      tbody.push( /*#__PURE__*/React.createElement(\"tr\", {\n        key: employee.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }\n      }, tr));\n    }\n\n    return tbody;\n  }\n\n  tableNewRow() {\n    const tr = [];\n    tr.push( /*#__PURE__*/React.createElement(\"th\", {\n      key: \"order-new\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, \"#\"));\n    tr.push( /*#__PURE__*/React.createElement(\"th\", {\n      key: \"signature-new\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      key: \"signature-input-new\",\n      onKeyDown: this.props.onNewEmployee,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 35\n      }\n    })));\n\n    for (const date of this.props.dates) {\n      tr.push( /*#__PURE__*/React.createElement(\"td\", {\n        key: date,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 12\n        }\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: \"signature-tr\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 12\n      }\n    }, tr);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"table\", {\n      className: \"carrotHR__table table table-hover table-striped mb-0 text-nowrap border-top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 5\n      }\n    }, this.tableHeader()), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 5\n      }\n    }, this.tableData(), this.tableNewRow()));\n  }\n\n}","map":{"version":3,"sources":["/home/tomek/Social_Media/CarrotStudio/CarrotHR/src/Components/EmployeesTableManager.js"],"names":["React","Component","format","require","moment","momentDurationFormatSetup","days","getDayName","date","dt","Date","getDay","days_PL","getPolishDayName","EmployeesTableManager","constructor","props","tableHeader","tr","push","dates","asString","tableData","tbody","i","employee","employees","entries","id","signature","schedule","schedules","find","employee_id","tdClassName","inputClassName","isBeginProperlyFormated","timeValidator","begin","includes","test","settings","is_absences_layer","is_time_layer","preference","holidays","holiday","onScheduleBeginChange","onScheduleEndChange","end","tableNewRow","onNewEmployee","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nconst format = require('date-format');\r\nconst moment = require('moment');\r\nconst momentDurationFormatSetup = require(\"moment-duration-format\");\r\n\r\nconst days = [\"sun\", \"mon\", \"tue\", \"wed\", \"thu\", \"fri\", \"sat\"];\r\nlet getDayName = (date) => {\r\n\tlet dt = new Date(date);\r\n\treturn days[dt.getDay()];\r\n}\r\n\r\nconst days_PL = [\"ND\", \"PN\", \"WT\", \"ŚR\", \"CZ\", \"PT\", \"SB\"];\r\nlet getPolishDayName = (date) => {\r\n\tlet dt = new Date(date);\r\n\treturn days_PL[dt.getDay()];\r\n}\r\n\r\nexport default class EmployeesTableManager extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\ttableHeader() {\r\n\t\tlet tr = []\r\n\r\n\t\ttr.push(<th key=\"number-header\" >#</th>)\r\n\t\ttr.push(<th className=\"border-right\" key=\"signature-header\">Pracownik</th>)\r\n\r\n\t    for ( const date of this.props.dates ) {\r\n\t      \ttr.push(<th data-date={date} key={date} className=\"border-right text-center p-0\"><span class=\"px-3\">{ format.asString('dd.MM', new Date(date)) }</span><hr class=\"m-0\"/><span class=\"px-3\">{ getPolishDayName(date) }</span></th>)\r\n\t    }\r\n\t    return ( <tr key=\"tr-header\">{ tr }</tr> )\r\n\t}\r\n\r\n\ttableData() {\r\n\t\tlet tbody = []\r\n\r\n\t\tfor ( const [i, employee] of this.props.employees.entries() ) {\r\n\t\t\tconst tr = []\r\n\r\n\t\t\ttr.push(<th className=\"align-middle\" key={ \"number-\" + employee.id }>{ i + 1 }</th>)\r\n\t\t\ttr.push(<th className=\"border-right align-middle\" key={ \"signature-\" + employee.id }>{ employee.signature }</th>)\r\n\r\n\t\t\tfor ( const date of this.props.dates ) {\r\n\t\t\t\tconst schedule = this.props.schedules.find(schedule => { return (\r\n\t\t\t\t\tschedule.employee_id == employee.id &&\r\n\t\t\t\t\tschedule.date == date\r\n\t\t\t\t)});\r\n\r\n\t\t\t\tlet tdClassName = \"border-right py-1 align-middle\";\r\n\t\t\t\tlet inputClassName = \"carrotHR__input carrotHR__input--shift form-control\";\r\n\r\n\t\t\t\tlet isBeginProperlyFormated = true;\r\n\t\t\t\tlet timeValidator = /^([0-1]?[0-9]|2[0-4]):([0-5][0-9])(:[0-5][0-9])?$/;\r\n\r\n\t\t\t\tif ( begin && ! [\"W\", \"PN\", \"WT\", \"ŚR\", \"CZ\", \"PT\", \"SB\", \"ND\"].includes( begin ) ) {\r\n\t\t\t\t\tif ( ! timeValidator.test( begin ) ) {\r\n\t\t\t\t\t\tisBeginProperlyFormated = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( this.props.settings.is_absences_layer ) {\r\n\r\n\t\t\t\t} else if ( this.props.settings.is_time_layer ) {\r\n\r\n\t\t\t\t} else {\r\n\r\n\r\n\r\n\t\t\t\t\tif ( getDayName(date) == \"sun\" ) tdClassName += \" carrotHR__field--sunday\";\r\n\t\t\t\t\tif ( schedule && schedule.preference ) tdClassName += \" carrotHR__field--preference\";\r\n\t\t\t\t\tif ( props.settings.holidays.find( holiday => { return ( holiday.date == date ) }) ) tdClassName += \" carrotHR__field--holiday\";\r\n\t\t\t\t\tif ( isBeginProperlyFormated === false ) tdClassName += \" carrotHR__field--warning\"\r\n\r\n\r\n\t\t\t\t\t// <input data-date-id={date} data-employee-id={employee.id} className={ endInputClassName } onChange={ (e) => props.onScheduleChange(e, \"end\") } value={ end } />\r\n\t\t\t\t\ttr.push(\r\n\t\t\t\t\t\t<td id={employee.id + \":\" + date} key={ employee.id + \":\" + date} className={ tdClassName }>\r\n\t\t\t\t\t\t\t<input data-date-id={date} data-employee-id={employee.id} className={ inputClassName } onChange={ props.onScheduleBeginChange } value={ begin } />\r\n\t\t\t\t\t\t\t{ ( begin && isBeginProperlyFormated && ! [\"W\", \"PN\", \"WT\", \"ŚR\", \"CZ\", \"PT\", \"SB\", \"ND\"].includes( begin ) ) ?\r\n\t\t\t\t\t\t\t\t<input data-date-id={date} data-employee-id={employee.id} className={ inputClassName } onChange={ props.onScheduleEndChange } value={ end } /> : \"\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttbody.push(<tr key={ employee.id } >{ tr }</tr>)\r\n\t\t}\r\n\r\n\t\treturn tbody;\r\n\t}\r\n\r\n\ttableNewRow() {\r\n\t\tconst tr = [];\r\n\t\ttr.push(<th key=\"order-new\">#</th>)\r\n\t\ttr.push(<th key=\"signature-new\"><input key=\"signature-input-new\" onKeyDown={ this.props.onNewEmployee } /></th>)\r\n\r\n\t\tfor ( const date of this.props.dates ) {\r\n\t\t\ttr.push(<td key={date}></td>)\r\n\t\t}\r\n\r\n\t\treturn ( <tr key=\"signature-tr\">{ tr }</tr> );\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<table className=\"carrotHR__table table table-hover table-striped mb-0 text-nowrap border-top\">\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t{ this.tableHeader() }\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{ this.tableData() }\r\n\t\t\t\t\t{ this.tableNewRow() }\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t)\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}