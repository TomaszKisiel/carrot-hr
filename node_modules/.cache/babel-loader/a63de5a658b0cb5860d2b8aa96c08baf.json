{"ast":null,"code":"var _jsxFileName = \"/home/tomek/projects/carrot-hr/src/features/counter/Counter.js\";\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { decrement, increment, incrementByAmount, incrementAsync, selectCount } from './counterSlice';\nimport styles from './Counter.module.css';\nexport function Counter() {\n  const count = useSelector(selectCount);\n  const dispatch = useDispatch();\n  const [incrementAmount, setIncrementAmount] = useState('2');\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: styles.button,\n    onClick: () => dispatch(increment()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, \" + \"), /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, count), /*#__PURE__*/React.createElement(\"button\", {\n    className: styles.button,\n    onClick: () => dispatch(decrement()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, \" - \")), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: styles.textbox,\n    value: incrementAmount,\n    onChange: e => setIncrementAmount(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: styles.button,\n    onClick: () => dispatch(incrementByAmount(Number(incrementAmount) || 0)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, \" Add Amount \"), /*#__PURE__*/React.createElement(\"button\", {\n    className: styles.asyncButton,\n    onClick: () => dispatch(incrementAsync(Number(incrementAmount) || 0)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, \" Add Async \"), /*#__PURE__*/React.createElement(\"button\", {\n    className: styles.button,\n    onClick: () => dispatch(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, \" Negative \")));\n}","map":{"version":3,"sources":["/home/tomek/projects/carrot-hr/src/features/counter/Counter.js"],"names":["React","useState","useSelector","useDispatch","decrement","increment","incrementByAmount","incrementAsync","selectCount","styles","Counter","count","dispatch","incrementAmount","setIncrementAmount","row","button","value","textbox","e","target","Number","asyncButton"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACCC,SADD,EAECC,SAFD,EAGGC,iBAHH,EAIGC,cAJH,EAKGC,WALH,QAMO,gBANP;AAOA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,OAAO,SAASC,OAAT,GAAmB;AACzB,QAAMC,KAAK,GAAGT,WAAW,CAACM,WAAD,CAAzB;AACA,QAAMI,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAM,CAACU,eAAD,EAAkBC,kBAAlB,IAAwCb,QAAQ,CAAC,GAAD,CAAtD;AAEA,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAK,IAAA,SAAS,EAAEQ,MAAM,CAACM,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAQ,IAAA,SAAS,EAAEN,MAAM,CAACO,MAA1B;AAAkC,IAAA,OAAO,EAAE,MAAMJ,QAAQ,CAACP,SAAS,EAAV,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADD,eAEC;AAAM,IAAA,SAAS,EAAEI,MAAM,CAACQ,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCN,KAAhC,CAFD,eAGC;AAAQ,IAAA,SAAS,EAAEF,MAAM,CAACO,MAA1B;AAAkC,IAAA,OAAO,EAAE,MAAMJ,QAAQ,CAACR,SAAS,EAAV,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHD,CADD,eAMC;AAAK,IAAA,SAAS,EAAEK,MAAM,CAACM,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAO,IAAA,SAAS,EAAEN,MAAM,CAACS,OAAzB;AAAkC,IAAA,KAAK,EAAEL,eAAzC;AAA0D,IAAA,QAAQ,EAAEM,CAAC,IAAIL,kBAAkB,CAACK,CAAC,CAACC,MAAF,CAASH,KAAV,CAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,eAEC;AAAQ,IAAA,SAAS,EAAER,MAAM,CAACO,MAA1B;AAAkC,IAAA,OAAO,EAAE,MAAMJ,QAAQ,CAACN,iBAAiB,CAACe,MAAM,CAACR,eAAD,CAAN,IAA2B,CAA5B,CAAlB,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFD,eAGC;AAAQ,IAAA,SAAS,EAAEJ,MAAM,CAACa,WAA1B;AAAuC,IAAA,OAAO,EAAE,MAAMV,QAAQ,CAACL,cAAc,CAACc,MAAM,CAACR,eAAD,CAAN,IAA2B,CAA5B,CAAf,CAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHD,eAIC;AAAQ,IAAA,SAAS,EAAEJ,MAAM,CAACO,MAA1B;AAAkC,IAAA,OAAO,EAAE,MAAMJ,QAAQ,EAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJD,CAND,CADD;AAeA","sourcesContent":["import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n\tdecrement,\r\n\tincrement,\r\n  \tincrementByAmount,\r\n  \tincrementAsync,\r\n  \tselectCount,\r\n} from './counterSlice';\r\nimport styles from './Counter.module.css';\r\n\r\nexport function Counter() {\r\n\tconst count = useSelector(selectCount);\r\n\tconst dispatch = useDispatch();\r\n\tconst [incrementAmount, setIncrementAmount] = useState('2');\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className={styles.row}>\r\n\t\t\t\t<button className={styles.button} onClick={() => dispatch(increment())} > + </button>\r\n\t\t\t\t<span className={styles.value}>{count}</span>\r\n\t\t\t\t<button className={styles.button} onClick={() => dispatch(decrement())} > - </button>\r\n\t\t\t</div>\r\n\t\t\t<div className={styles.row}>\r\n\t\t\t\t<input className={styles.textbox} value={incrementAmount} onChange={e => setIncrementAmount(e.target.value)} />\r\n\t\t\t\t<button className={styles.button} onClick={() => dispatch(incrementByAmount(Number(incrementAmount) || 0)) }> Add Amount </button>\r\n\t\t\t\t<button className={styles.asyncButton} onClick={() => dispatch(incrementAsync(Number(incrementAmount) || 0))} > Add Async </button>\r\n\t\t\t\t<button className={styles.button} onClick={() => dispatch(  )} > Negative </button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}