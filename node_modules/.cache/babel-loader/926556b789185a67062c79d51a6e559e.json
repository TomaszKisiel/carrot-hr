{"ast":null,"code":"const initialState = {\n  is_absences_layer: false,\n  is_time_layer: false,\n  daily_time: \"12:00\",\n  daily_break: \"13:00\",\n  weekly_break: \"35:00\",\n  free_days: {\n    sun: {\n      index: \"\",\n      permanent: true\n    },\n    mon: null,\n    tue: null,\n    wed: null,\n    thu: null,\n    fri: null,\n    sat: {\n      index: \"\",\n      permanent: false\n    }\n  },\n  min_per_shift: {\n    sun: {\n      shift_1: 0,\n      shift_2: 0\n    },\n    mon: {\n      shift_1: 5,\n      shift_2: 5\n    },\n    tue: {\n      shift_1: 4,\n      shift_2: 4\n    },\n    wed: {\n      shift_1: 5,\n      shift_2: 4\n    },\n    thu: {\n      shift_1: 4,\n      shift_2: 4\n    },\n    fri: {\n      shift_1: 4,\n      shift_2: 4\n    },\n    sat: {\n      shift_1: 5,\n      shift_2: 4\n    }\n  }\n};\n\nconst settingsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'DAILY_TIME':\n      {\n        return { ...state,\n          daily_time: action.value\n        };\n      }\n\n    case 'DAILY_TIME':\n      {\n        return { ...state,\n          daily_break: action.value\n        };\n      }\n\n    case 'DAILY_TIME':\n      {\n        return { ...state,\n          weekly_break: action.value\n        };\n      }\n\n    case 'ABSENCES':\n      {\n        state.is_absences_layer = !state.is_absences_layer;\n        state.is_time_layer = false;\n        return { ...state\n        };\n      }\n\n    case 'WORK_TIME':\n      {\n        state.is_absences_layer = false;\n        state.is_time_layer = !state.is_time_layer;\n        return { ...state\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default settingsReducer;","map":{"version":3,"sources":["/home/tomek/projects/carrot-hr/src/reducers/settings.js"],"names":["initialState","is_absences_layer","is_time_layer","daily_time","daily_break","weekly_break","free_days","sun","index","permanent","mon","tue","wed","thu","fri","sat","min_per_shift","shift_1","shift_2","settingsReducer","state","action","type","value"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACpBC,EAAAA,iBAAiB,EAAE,KADC;AAEpBC,EAAAA,aAAa,EAAE,KAFK;AAGpBC,EAAAA,UAAU,EAAE,OAHQ;AAIpBC,EAAAA,WAAW,EAAE,OAJO;AAKpBC,EAAAA,YAAY,EAAE,OALM;AAMpBC,EAAAA,SAAS,EAAE;AACVC,IAAAA,GAAG,EAAE;AAAEC,MAAAA,KAAK,EAAE,EAAT;AAAaC,MAAAA,SAAS,EAAE;AAAxB,KADK;AAEVC,IAAAA,GAAG,EAAE,IAFK;AAGVC,IAAAA,GAAG,EAAE,IAHK;AAIVC,IAAAA,GAAG,EAAE,IAJK;AAKVC,IAAAA,GAAG,EAAE,IALK;AAMVC,IAAAA,GAAG,EAAE,IANK;AAOVC,IAAAA,GAAG,EAAE;AAAEP,MAAAA,KAAK,EAAE,EAAT;AAAaC,MAAAA,SAAS,EAAE;AAAxB;AAPK,GANS;AAepBO,EAAAA,aAAa,EAAE;AACdT,IAAAA,GAAG,EAAE;AACJU,MAAAA,OAAO,EAAE,CADL;AAEJC,MAAAA,OAAO,EAAE;AAFL,KADS;AAKdR,IAAAA,GAAG,EAAE;AACJO,MAAAA,OAAO,EAAE,CADL;AAEJC,MAAAA,OAAO,EAAE;AAFL,KALS;AASdP,IAAAA,GAAG,EAAE;AACJM,MAAAA,OAAO,EAAE,CADL;AAEJC,MAAAA,OAAO,EAAE;AAFL,KATS;AAadN,IAAAA,GAAG,EAAE;AACJK,MAAAA,OAAO,EAAE,CADL;AAEJC,MAAAA,OAAO,EAAE;AAFL,KAbS;AAiBdL,IAAAA,GAAG,EAAE;AACJI,MAAAA,OAAO,EAAE,CADL;AAEJC,MAAAA,OAAO,EAAE;AAFL,KAjBS;AAqBdJ,IAAAA,GAAG,EAAE;AACJG,MAAAA,OAAO,EAAE,CADL;AAEJC,MAAAA,OAAO,EAAE;AAFL,KArBS;AAyBdH,IAAAA,GAAG,EAAE;AACJE,MAAAA,OAAO,EAAE,CADL;AAEJC,MAAAA,OAAO,EAAE;AAFL;AAzBS;AAfK,CAArB;;AA+CA,MAAMC,eAAe,GAAG,CAAEC,KAAK,GAAGpB,YAAV,EAAwBqB,MAAxB,KAAoC;AAC3D,UAASA,MAAM,CAACC,IAAhB;AACC,SAAK,YAAL;AAAmB;AAClB,eAAO,EAAE,GAAGF,KAAL;AAAYjB,UAAAA,UAAU,EAAEkB,MAAM,CAACE;AAA/B,SAAP;AACA;;AACD,SAAK,YAAL;AAAmB;AAClB,eAAO,EAAE,GAAGH,KAAL;AAAYhB,UAAAA,WAAW,EAAEiB,MAAM,CAACE;AAAhC,SAAP;AACA;;AACD,SAAK,YAAL;AAAmB;AAClB,eAAO,EAAE,GAAGH,KAAL;AAAYf,UAAAA,YAAY,EAAEgB,MAAM,CAACE;AAAjC,SAAP;AACA;;AACD,SAAK,UAAL;AAAiB;AAChBH,QAAAA,KAAK,CAACnB,iBAAN,GAA0B,CAAEmB,KAAK,CAACnB,iBAAlC;AACAmB,QAAAA,KAAK,CAAClB,aAAN,GAAsB,KAAtB;AACA,eAAO,EAAE,GAAGkB;AAAL,SAAP;AACA;;AACD,SAAK,WAAL;AAAkB;AACjBA,QAAAA,KAAK,CAACnB,iBAAN,GAA0B,KAA1B;AACAmB,QAAAA,KAAK,CAAClB,aAAN,GAAsB,CAAEkB,KAAK,CAAClB,aAA9B;AACA,eAAO,EAAE,GAAGkB;AAAL,SAAP;AACA;;AACD;AACC,aAAOA,KAAP;AArBF;AAuBA,CAxBD;;AA0BA,eAAeD,eAAf","sourcesContent":["const initialState = {\n\tis_absences_layer: false,\n\tis_time_layer: false,\n\tdaily_time: \"12:00\",\n\tdaily_break: \"13:00\",\n\tweekly_break: \"35:00\",\n\tfree_days: {\n\t\tsun: { index: \"\", permanent: true},\n\t\tmon: null,\n\t\ttue: null,\n\t\twed: null,\n\t\tthu: null,\n\t\tfri: null,\n\t\tsat: { index: \"\", permanent: false},\n\t},\n\tmin_per_shift: {\n\t\tsun: {\n\t\t\tshift_1: 0,\n\t\t\tshift_2: 0,\n\t\t},\n\t\tmon: {\n\t\t\tshift_1: 5,\n\t\t\tshift_2: 5,\n\t\t},\n\t\ttue: {\n\t\t\tshift_1: 4,\n\t\t\tshift_2: 4,\n\t\t},\n\t\twed: {\n\t\t\tshift_1: 5,\n\t\t\tshift_2: 4,\n\t\t},\n\t\tthu: {\n\t\t\tshift_1: 4,\n\t\t\tshift_2: 4,\n\t\t},\n\t\tfri: {\n\t\t\tshift_1: 4,\n\t\t\tshift_2: 4,\n\t\t},\n\t\tsat: {\n\t\t\tshift_1: 5,\n\t\t\tshift_2: 4,\n\t\t},\n\t}\n}\n\nconst settingsReducer = ( state = initialState, action ) => {\n\tswitch ( action.type ) {\n\t\tcase 'DAILY_TIME': {\n\t\t\treturn { ...state, daily_time: action.value }\n\t\t}\n\t\tcase 'DAILY_TIME': {\n\t\t\treturn { ...state, daily_break: action.value }\n\t\t}\n\t\tcase 'DAILY_TIME': {\n\t\t\treturn { ...state, weekly_break: action.value }\n\t\t}\n\t\tcase 'ABSENCES': {\n\t\t\tstate.is_absences_layer = ! state.is_absences_layer\n\t\t\tstate.is_time_layer = false\n\t\t\treturn { ...state }\n\t\t}\n\t\tcase 'WORK_TIME': {\n\t\t\tstate.is_absences_layer = false\n\t\t\tstate.is_time_layer = ! state.is_time_layer\n\t\t\treturn { ...state }\n\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default settingsReducer;\n"]},"metadata":{},"sourceType":"module"}