{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState: {\n    value: 0\n  },\n  reducers: {\n    increment: state => {\n      state.value += 1;\n    },\n    decrement: state => {\n      state.value -= 1;\n    },\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    }\n  }\n});\nexport const {\n  increment,\n  decrement,\n  incrementByAmount\n} = counterSlice.actions;\nexport const incrementAsync = amount => dispatch => {\n  setTimeout(() => {\n    dispatch(incrementByAmount(amount));\n  }, 1000);\n};\nexport const selectCount = state => state.counter.value;\nexport default counterSlice.reducer;","map":{"version":3,"sources":["/home/tomek/projects/carrot-hr/src/features/counter/counterSlice.js"],"names":["createSlice","counterSlice","name","initialState","value","reducers","increment","state","decrement","incrementByAmount","action","payload","actions","incrementAsync","amount","dispatch","setTimeout","selectCount","counter","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,YAAY,GAAGD,WAAW,CAAC;AACtCE,EAAAA,IAAI,EAAE,SADgC;AAEtCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EAAE;AADK,GAFwB;AAKtCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,EAAEC,KAAK,IAAI;AAClBA,MAAAA,KAAK,CAACH,KAAN,IAAe,CAAf;AACD,KAHO;AAIRI,IAAAA,SAAS,EAAED,KAAK,IAAI;AAClBA,MAAAA,KAAK,CAACH,KAAN,IAAe,CAAf;AACD,KANO;AAORK,IAAAA,iBAAiB,EAAE,CAACF,KAAD,EAAQG,MAAR,KAAmB;AACpCH,MAAAA,KAAK,CAACH,KAAN,IAAeM,MAAM,CAACC,OAAtB;AACD;AATO;AAL4B,CAAD,CAAhC;AAkBP,OAAO,MAAM;AAAEL,EAAAA,SAAF;AAAaE,EAAAA,SAAb;AAAwBC,EAAAA;AAAxB,IAA8CR,YAAY,CAACW,OAAjE;AAEP,OAAO,MAAMC,cAAc,GAAGC,MAAM,IAAIC,QAAQ,IAAI;AAClDC,EAAAA,UAAU,CAAC,MAAM;AACfD,IAAAA,QAAQ,CAACN,iBAAiB,CAACK,MAAD,CAAlB,CAAR;AACD,GAFS,EAEP,IAFO,CAAV;AAGD,CAJM;AAMP,OAAO,MAAMG,WAAW,GAAGV,KAAK,IAAIA,KAAK,CAACW,OAAN,CAAcd,KAA3C;AAEP,eAAeH,YAAY,CAACkB,OAA5B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState: {\r\n    value: 0,\r\n  },\r\n  reducers: {\r\n    increment: state => {\r\n      state.value += 1;\r\n    },\r\n    decrement: state => {\r\n      state.value -= 1;\r\n    },\r\n    incrementByAmount: (state, action) => {\r\n      state.value += action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\r\n\r\nexport const incrementAsync = amount => dispatch => {\r\n  setTimeout(() => {\r\n    dispatch(incrementByAmount(amount));\r\n  }, 1000);\r\n};\r\n\r\nexport const selectCount = state => state.counter.value;\r\n\r\nexport default counterSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}