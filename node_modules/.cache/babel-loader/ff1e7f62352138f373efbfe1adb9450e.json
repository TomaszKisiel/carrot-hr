{"ast":null,"code":"var _jsxFileName = \"/home/tomek/social-media/carrot-studio/CarrotHR/src/Components/EmployeesTableManager.js\";\nimport React, { Component } from 'react';\nimport * as Helpers from './Helpers.js';\n\nconst format = require('date-format');\n\nconst moment = require('moment');\n\nconst momentDurationFormatSetup = require(\"moment-duration-format\");\n\nexport default class EmployeesTableManager extends Component {\n  constructor(props) {\n    super(props);\n\n    this.employeeTime = (employee_id, time_contract) => {\n      let calculateTime = (base, div) => {\n        let time = 0;\n\n        for (const week of weeks) {\n          for (const date of week) {\n            let free_day = this.props.settings.free_days[getDayName(date)];\n            let holiday = this.state.settings.holidays.find(holiday => {\n              return holiday.date == date;\n            });\n            if (!free_day && !holiday) time += 1 * (base * div);\n          }\n        }\n\n        return time;\n      };\n\n      const time = calculateTime(8, time_contract);\n    };\n  }\n\n  tableHeader() {\n    let tr = [];\n    tr.push( /*#__PURE__*/React.createElement(\"th\", {\n      key: \"number-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }\n    }, \"#\"));\n    tr.push( /*#__PURE__*/React.createElement(\"th\", {\n      className: \"border-right\",\n      key: \"signature-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }\n    }, \"Pracownik\"));\n\n    for (const date of this.props.dates) {\n      tr.push( /*#__PURE__*/React.createElement(\"th\", {\n        \"data-date\": date,\n        key: date,\n        className: \"border-right text-center p-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        class: \"px-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 90\n        }\n      }, format.asString('dd.MM', new Date(date))), /*#__PURE__*/React.createElement(\"hr\", {\n        class: \"m-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 160\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        class: \"px-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 177\n        }\n      }, Helpers.getPolishDayName(date))));\n    }\n\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: \"tr-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 15\n      }\n    }, tr);\n  }\n\n  tableData() {\n    let tbody = [];\n\n    for (const [i, employee] of this.props.employees.entries()) {\n      const tr = [];\n      tr.push( /*#__PURE__*/React.createElement(\"th\", {\n        className: \"align-middle\",\n        key: \"number-\" + employee.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 12\n        }\n      }, i + 1));\n      tr.push( /*#__PURE__*/React.createElement(\"th\", {\n        className: \"border-right align-middle\",\n        key: \"signature-\" + employee.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 12\n        }\n      }, employee.signature, \" \", this.employeeTime(employee.id, employee.time_contract)));\n\n      for (const date of this.props.dates) {\n        const schedule = this.props.schedules.find(schedule => {\n          return schedule.employee_id == employee.id && schedule.date == date;\n        });\n        let scheduleBegin = schedule ? schedule.begin : \"\";\n        let scheduleEnd = schedule ? schedule.end : \"\";\n        let tdTitle = \"\";\n        let tdClassName = \"border-right py-1 align-middle\";\n        let inputClassName = \"carrotHR__input carrotHR__input--shift form-control\";\n        if (Helpers.getDayName(date) == \"sun\") tdClassName += \" carrotHR__field--sunday\";\n        if (schedule && schedule.preference) tdClassName += \" carrotHR__field--preference\";\n        if (this.props.settings.holidays.find(holiday => {\n          return holiday.date == date;\n        })) tdClassName += \" carrotHR__field--holiday\";\n        let shiftTime = \"\";\n\n        if (Helpers.timeValidator(scheduleBegin) && Helpers.timeValidator(scheduleEnd)) {\n          let scheduleBeginDate = moment(date + \" \" + scheduleBegin);\n          let scheduleEndDate = moment(date + \" \" + scheduleEnd);\n\n          if (scheduleEndDate.diff(scheduleBeginDate) <= 0) {\n            scheduleEndDate.add(1, 'days');\n          }\n\n          shiftTime = moment.duration(scheduleEndDate.diff(scheduleBeginDate));\n          let norm = shiftTime.asHours() - this.props.settings.max_daily_time;\n\n          if (norm > 0) {// tdClassName += \" carrotHR__field--warning\";\n            // tdTitle = \" Przekroczono normÄ™ czasu pracy o \" + norm + \"h.\";\n          }\n\n          shiftTime = shiftTime.format(\"H:mm\");\n        } else if (Helpers.shiftValidator(scheduleBegin)) {\n          shiftTime = scheduleBegin;\n        }\n\n        if (schedule && schedule.validation.is_valid === false) {\n          tdClassName += \" carrotHR__field--warning\";\n          tdTitle = schedule.validation.reason;\n        }\n\n        if (this.props.settings.is_absences_layer) {} else if (this.props.settings.is_time_layer) {\n          tr.push( /*#__PURE__*/React.createElement(\"td\", {\n            id: employee.id + \":\" + date,\n            key: employee.id + \":\" + date,\n            className: tdClassName,\n            title: tdTitle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 7\n            }\n          }, /*#__PURE__*/React.createElement(\"input\", {\n            \"data-date-id\": date,\n            \"data-employee-id\": employee.id,\n            className: inputClassName,\n            value: shiftTime,\n            disabled: true,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 8\n            }\n          })));\n        } else {\n          let endInput = null;\n\n          if (schedule && Helpers.timeValidator(schedule.begin) && !Helpers.shiftValidator(schedule.begin)) {\n            endInput = /*#__PURE__*/React.createElement(\"input\", {\n              \"data-date-id\": date,\n              \"data-employee-id\": employee.id,\n              className: inputClassName,\n              onChange: this.props.onScheduleEndChange,\n              value: scheduleEnd,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 18\n              }\n            });\n          }\n\n          tr.push( /*#__PURE__*/React.createElement(\"td\", {\n            id: employee.id + \":\" + date,\n            key: employee.id + \":\" + date,\n            className: tdClassName,\n            title: tdTitle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 7\n            }\n          }, /*#__PURE__*/React.createElement(\"input\", {\n            \"data-date-id\": date,\n            \"data-employee-id\": employee.id,\n            className: inputClassName,\n            onChange: this.props.onScheduleBeginChange,\n            value: scheduleBegin,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 8\n            }\n          }), endInput));\n        }\n      }\n\n      tbody.push( /*#__PURE__*/React.createElement(\"tr\", {\n        key: employee.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }\n      }, tr));\n    }\n\n    return tbody;\n  }\n\n  tableNewRow() {\n    const tr = [];\n    tr.push( /*#__PURE__*/React.createElement(\"th\", {\n      key: \"order-new\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }\n    }, \"#\"));\n    tr.push( /*#__PURE__*/React.createElement(\"th\", {\n      key: \"signature-new\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      key: \"signature-input-new\",\n      onKeyDown: this.props.onNewEmployee,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 35\n      }\n    })));\n\n    for (const date of this.props.dates) {\n      tr.push( /*#__PURE__*/React.createElement(\"td\", {\n        key: date,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 12\n        }\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: \"signature-tr\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 12\n      }\n    }, tr);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"table\", {\n      className: \"carrotHR__table table table-hover table-striped mb-0 text-nowrap border-top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 5\n      }\n    }, this.tableHeader()), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 5\n      }\n    }, this.tableData(), this.tableNewRow()));\n  }\n\n}","map":{"version":3,"sources":["/home/tomek/social-media/carrot-studio/CarrotHR/src/Components/EmployeesTableManager.js"],"names":["React","Component","Helpers","format","require","moment","momentDurationFormatSetup","EmployeesTableManager","constructor","props","employeeTime","employee_id","time_contract","calculateTime","base","div","time","week","weeks","date","free_day","settings","free_days","getDayName","holiday","state","holidays","find","tableHeader","tr","push","dates","asString","Date","getPolishDayName","tableData","tbody","i","employee","employees","entries","id","signature","schedule","schedules","scheduleBegin","begin","scheduleEnd","end","tdTitle","tdClassName","inputClassName","preference","shiftTime","timeValidator","scheduleBeginDate","scheduleEndDate","diff","add","duration","norm","asHours","max_daily_time","shiftValidator","validation","is_valid","reason","is_absences_layer","is_time_layer","endInput","onScheduleEndChange","onScheduleBeginChange","tableNewRow","onNewEmployee","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport * as Helpers from'./Helpers.js';\r\n\r\nconst format = require('date-format');\r\nconst moment = require('moment');\r\nconst momentDurationFormatSetup = require(\"moment-duration-format\");\r\n\r\nexport default class EmployeesTableManager extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\ttableHeader() {\r\n\t\tlet tr = []\r\n\r\n\t\ttr.push(<th key=\"number-header\" >#</th>)\r\n\t\ttr.push(<th className=\"border-right\" key=\"signature-header\">Pracownik</th>)\r\n\r\n\t    for ( const date of this.props.dates ) {\r\n\t      \ttr.push(<th data-date={date} key={date} className=\"border-right text-center p-0\"><span class=\"px-3\">{ format.asString('dd.MM', new Date(date)) }</span><hr class=\"m-0\"/><span class=\"px-3\">{ Helpers.getPolishDayName(date) }</span></th>)\r\n\t    }\r\n\t    return ( <tr key=\"tr-header\">{ tr }</tr> )\r\n\t}\r\n\r\n\temployeeTime = (employee_id, time_contract) => {\r\n\t\tlet calculateTime = (base, div) => {\r\n\t\t\tlet time = 0;\r\n\t\t\tfor ( const week of weeks ) {\r\n\t\t\t\tfor ( const date of week ) {\r\n\t\t\t\t\tlet free_day = this.props.settings.free_days[ getDayName(date) ];\r\n\t\t\t\t\tlet holiday = this.state.settings.holidays.find( holiday => { return ( holiday.date == date ) } )\r\n\t\t\t\t\tif ( !free_day && !holiday ) time += 1 * ( base * div);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn time;\r\n\t\t}\r\n\t\tconst time = calculateTime(8, time_contract)\r\n\r\n\t}\r\n\r\n\ttableData() {\r\n\t\tlet tbody = []\r\n\r\n\t\tfor ( const [i, employee] of this.props.employees.entries() ) {\r\n\t\t\tconst tr = []\r\n\r\n\t\t\ttr.push(<th className=\"align-middle\" key={ \"number-\" + employee.id }>{ i + 1 }</th>)\r\n\t\t\ttr.push(<th className=\"border-right align-middle\" key={ \"signature-\" + employee.id }>{ employee.signature } { this.employeeTime(employee.id, employee.time_contract) }</th>)\r\n\r\n\t\t\tfor ( const date of this.props.dates ) {\r\n\t\t\t\tconst schedule = this.props.schedules.find(schedule => { return (\r\n\t\t\t\t\tschedule.employee_id == employee.id &&\r\n\t\t\t\t\tschedule.date == date\r\n\t\t\t\t)});\r\n\r\n\t\t\t\tlet scheduleBegin = ( schedule ) ? schedule.begin : \"\";\r\n\t\t\t\tlet scheduleEnd = ( schedule ) ? schedule.end : \"\";\r\n\r\n\t\t\t\tlet tdTitle = \"\";\r\n\t\t\t\tlet tdClassName = \"border-right py-1 align-middle\";\r\n\t\t\t\tlet inputClassName = \"carrotHR__input carrotHR__input--shift form-control\";\r\n\r\n\t\t\t\tif ( Helpers.getDayName(date) == \"sun\" ) tdClassName += \" carrotHR__field--sunday\";\r\n\t\t\t\tif ( schedule && schedule.preference ) tdClassName += \" carrotHR__field--preference\";\r\n\t\t\t\tif ( this.props.settings.holidays.find( holiday => { return ( holiday.date == date ) }) ) tdClassName += \" carrotHR__field--holiday\";\r\n\r\n\r\n\t\t\t\tlet shiftTime = \"\";\r\n\t\t\t\tif ( ( Helpers.timeValidator( scheduleBegin ) && Helpers.timeValidator( scheduleEnd ) ) ) {\r\n\t\t\t\t\tlet scheduleBeginDate = moment(date + \" \" + scheduleBegin)\r\n\t\t\t\t\tlet scheduleEndDate = moment(date + \" \" + scheduleEnd)\r\n\r\n\t\t\t\t\tif ( scheduleEndDate.diff(scheduleBeginDate) <= 0 ) {\r\n\t\t\t\t\t\tscheduleEndDate.add(1, 'days');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tshiftTime = moment.duration( scheduleEndDate.diff( scheduleBeginDate ) );\r\n\r\n\t\t\t\t\tlet norm = shiftTime.asHours() - this.props.settings.max_daily_time\r\n\t\t\t\t\tif ( norm > 0 ) {\r\n\t\t\t\t\t\t// tdClassName += \" carrotHR__field--warning\";\r\n\t\t\t\t\t\t// tdTitle = \" Przekroczono normÄ™ czasu pracy o \" + norm + \"h.\";\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tshiftTime = shiftTime.format(\"H:mm\");\r\n\t\t\t\t} else if( Helpers.shiftValidator( scheduleBegin) ) {\r\n\t\t\t\t\tshiftTime = scheduleBegin;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( schedule && schedule.validation.is_valid === false ) {\r\n\t\t\t\t\ttdClassName += \" carrotHR__field--warning\"\r\n\t\t\t\t\ttdTitle = schedule.validation.reason;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( this.props.settings.is_absences_layer ) {\r\n\r\n\t\t\t\t} else if ( this.props.settings.is_time_layer ) {\r\n\t\t\t\t\ttr.push(\r\n\t\t\t\t\t\t<td id={employee.id + \":\" + date} key={ employee.id + \":\" + date} className={ tdClassName } title={ tdTitle }>\r\n\t\t\t\t\t\t\t<input data-date-id={date} data-employee-id={employee.id} className={ inputClassName } value={ shiftTime } disabled/>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlet endInput = null;\r\n\r\n\t\t\t\t\tif ( schedule && Helpers.timeValidator(schedule.begin) && !Helpers.shiftValidator(schedule.begin) ) {\r\n\t\t\t\t\t\tendInput = <input data-date-id={date} data-employee-id={employee.id} className={ inputClassName } onChange={ this.props.onScheduleEndChange } value={ scheduleEnd } />\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttr.push(\r\n\t\t\t\t\t\t<td id={employee.id + \":\" + date} key={ employee.id + \":\" + date} className={ tdClassName } title={ tdTitle }>\r\n\t\t\t\t\t\t\t<input data-date-id={date} data-employee-id={employee.id} className={ inputClassName } onChange={ this.props.onScheduleBeginChange } value={ scheduleBegin } />\r\n\t\t\t\t\t\t\t{ endInput }\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttbody.push(<tr key={ employee.id } >{ tr }</tr>)\r\n\t\t}\r\n\r\n\t\treturn tbody;\r\n\t}\r\n\r\n\ttableNewRow() {\r\n\t\tconst tr = [];\r\n\t\ttr.push(<th key=\"order-new\">#</th>)\r\n\t\ttr.push(<th key=\"signature-new\"><input key=\"signature-input-new\" onKeyDown={ this.props.onNewEmployee } /></th>)\r\n\r\n\t\tfor ( const date of this.props.dates ) {\r\n\t\t\ttr.push(<td key={date}></td>)\r\n\t\t}\r\n\r\n\t\treturn ( <tr key=\"signature-tr\">{ tr }</tr> );\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<table className=\"carrotHR__table table table-hover table-striped mb-0 text-nowrap border-top\">\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t{ this.tableHeader() }\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{ this.tableData() }\r\n\t\t\t\t\t{ this.tableNewRow() }\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t)\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}