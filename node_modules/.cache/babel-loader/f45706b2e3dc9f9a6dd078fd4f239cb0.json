{"ast":null,"code":"var _jsxFileName = \"/home/tomek/projects/carrot-hr/src/Components/EmployeesTableManager.js\";\nimport React, { Component } from 'react';\nimport * as Helpers from './Helpers.js';\n\nconst format = require('date-format');\n\nconst moment = require('moment');\n\nconst momentDurationFormatSetup = require(\"moment-duration-format\");\n\nexport default class EmployeesTableManager extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  tableHeader() {\n    let tr = [];\n    tr.push( /*#__PURE__*/React.createElement(\"th\", {\n      key: \"number-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }\n    }, \"#\"));\n    tr.push( /*#__PURE__*/React.createElement(\"th\", {\n      className: \"border-right\",\n      key: \"signature-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }\n    }, \"Pracownik\"));\n\n    for (const date of this.props.dates) {\n      tr.push( /*#__PURE__*/React.createElement(\"th\", {\n        \"data-date\": date,\n        key: date,\n        className: \"border-right text-center p-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        class: \"px-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 90\n        }\n      }, format.asString('dd.MM', new Date(date))), /*#__PURE__*/React.createElement(\"hr\", {\n        class: \"m-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 160\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        class: \"px-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 177\n        }\n      }, Helpers.getPolishDayName(date))));\n    }\n\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: \"tr-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 15\n      }\n    }, tr);\n  }\n\n  tableData() {\n    let tbody = [];\n\n    for (const [i, employee] of this.props.employees.entries()) {\n      const tr = [];\n      tr.push( /*#__PURE__*/React.createElement(\"th\", {\n        className: \"align-middle\",\n        key: \"number-\" + employee.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 12\n        }\n      }, i + 1));\n      tr.push( /*#__PURE__*/React.createElement(\"th\", {\n        className: \"border-right align-middle\",\n        key: \"signature-\" + employee.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 12\n        }\n      }, employee.signature, \" \", this.employeeTime(employee.id, employee.time_contract)));\n\n      for (const date of this.props.dates) {\n        const schedule = this.props.schedules.find(schedule => {\n          return schedule.employee_id == employee.id && schedule.date == date;\n        });\n        let scheduleBegin = schedule ? schedule.begin : \"\";\n        let scheduleEnd = schedule ? schedule.end : \"\";\n        let tdTitle = \"\";\n        let tdClassName = \"border-right py-1 align-middle\";\n        let inputClassName = \"carrotHR__input carrotHR__input--shift form-control\";\n        if (Helpers.getDayName(date) == \"sun\") tdClassName += \" carrotHR__field--sunday\";\n        if (schedule && schedule.preference) tdClassName += \" carrotHR__field--preference\";\n        if (this.props.settings.holidays.find(holiday => {\n          return holiday.date == date;\n        })) tdClassName += \" carrotHR__field--holiday\";\n\n        if (schedule && schedule.validation.is_valid === false) {\n          tdClassName += \" carrotHR__field--warning\";\n          tdTitle = schedule.validation.reason;\n        }\n\n        if (this.props.settings.is_absences_layer) {} else if (this.props.settings.is_time_layer) {\n          let shiftTime = \"\";\n\n          if (Helpers.timeValidator(scheduleBegin) && Helpers.timeValidator(scheduleEnd)) {\n            let scheduleBeginDate = moment(date + \" \" + scheduleBegin);\n            let scheduleEndDate = moment(date + \" \" + scheduleEnd);\n\n            if (scheduleEndDate.diff(scheduleBeginDate) <= 0) {\n              scheduleEndDate.add(1, 'days');\n            }\n\n            shiftTime = moment.duration(scheduleEndDate.diff(scheduleBeginDate)).format(\"H:mm\");\n          } else if (Helpers.shiftValidator(scheduleBegin)) {\n            shiftTime = scheduleBegin;\n          }\n\n          tr.push( /*#__PURE__*/React.createElement(\"td\", {\n            id: employee.id + \":\" + date,\n            key: employee.id + \":\" + date,\n            className: tdClassName,\n            title: tdTitle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 7\n            }\n          }, /*#__PURE__*/React.createElement(\"input\", {\n            \"data-date-id\": date,\n            \"data-employee-id\": employee.id,\n            className: inputClassName,\n            value: shiftTime,\n            disabled: true,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 8\n            }\n          })));\n        } else {\n          let endInput = null;\n\n          if (schedule && Helpers.timeValidator(schedule.begin)) {\n            endInput = /*#__PURE__*/React.createElement(\"input\", {\n              \"data-date-id\": date,\n              \"data-employee-id\": employee.id,\n              className: inputClassName,\n              onChange: this.props.onScheduleEndChange,\n              value: scheduleEnd,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 18\n              }\n            });\n          }\n\n          tr.push( /*#__PURE__*/React.createElement(\"td\", {\n            id: employee.id + \":\" + date,\n            key: employee.id + \":\" + date,\n            className: tdClassName,\n            title: tdTitle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 7\n            }\n          }, /*#__PURE__*/React.createElement(\"input\", {\n            \"data-date-id\": date,\n            \"data-employee-id\": employee.id,\n            className: inputClassName,\n            onChange: this.props.onScheduleBeginChange,\n            value: scheduleBegin,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 8\n            }\n          }), endInput));\n        }\n      }\n\n      tbody.push( /*#__PURE__*/React.createElement(\"tr\", {\n        key: employee.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }\n      }, tr));\n    }\n\n    return tbody;\n  }\n\n  tableNewRow() {\n    const tr = [];\n    tr.push( /*#__PURE__*/React.createElement(\"th\", {\n      key: \"order-new\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }, \"#\"));\n    tr.push( /*#__PURE__*/React.createElement(\"th\", {\n      key: \"signature-new\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      key: \"signature-input-new\",\n      onKeyDown: this.props.onNewEmployee,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 35\n      }\n    })));\n\n    for (const date of this.props.dates) {\n      tr.push( /*#__PURE__*/React.createElement(\"td\", {\n        key: date,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 12\n        }\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: \"signature-tr\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 12\n      }\n    }, tr);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"table\", {\n      className: \"carrotHR__table table table-hover table-striped mb-0 text-nowrap border-top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 5\n      }\n    }, this.tableHeader()), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 5\n      }\n    }, this.tableData(), this.tableNewRow()));\n  }\n\n}","map":{"version":3,"sources":["/home/tomek/projects/carrot-hr/src/Components/EmployeesTableManager.js"],"names":["React","Component","Helpers","format","require","moment","momentDurationFormatSetup","EmployeesTableManager","constructor","props","tableHeader","tr","push","date","dates","asString","Date","getPolishDayName","tableData","tbody","i","employee","employees","entries","id","signature","employeeTime","time_contract","schedule","schedules","find","employee_id","scheduleBegin","begin","scheduleEnd","end","tdTitle","tdClassName","inputClassName","getDayName","preference","settings","holidays","holiday","validation","is_valid","reason","is_absences_layer","is_time_layer","shiftTime","timeValidator","scheduleBeginDate","scheduleEndDate","diff","add","duration","shiftValidator","endInput","onScheduleEndChange","onScheduleBeginChange","tableNewRow","onNewEmployee","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport * as Helpers from'./Helpers.js';\r\n\r\nconst format = require('date-format');\r\nconst moment = require('moment');\r\nconst momentDurationFormatSetup = require(\"moment-duration-format\");\r\n\r\nexport default class EmployeesTableManager extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\ttableHeader() {\r\n\t\tlet tr = []\r\n\r\n\t\ttr.push(<th key=\"number-header\" >#</th>)\r\n\t\ttr.push(<th className=\"border-right\" key=\"signature-header\">Pracownik</th>)\r\n\r\n\t    for ( const date of this.props.dates ) {\r\n\t      \ttr.push(<th data-date={date} key={date} className=\"border-right text-center p-0\"><span class=\"px-3\">{ format.asString('dd.MM', new Date(date)) }</span><hr class=\"m-0\"/><span class=\"px-3\">{ Helpers.getPolishDayName(date) }</span></th>)\r\n\t    }\r\n\t    return ( <tr key=\"tr-header\">{ tr }</tr> )\r\n\t}\r\n\r\n\ttableData() {\r\n\t\tlet tbody = []\r\n\r\n\t\tfor ( const [i, employee] of this.props.employees.entries() ) {\r\n\t\t\tconst tr = []\r\n\r\n\t\t\ttr.push(<th className=\"align-middle\" key={ \"number-\" + employee.id }>{ i + 1 }</th>)\r\n\t\t\ttr.push(<th className=\"border-right align-middle\" key={ \"signature-\" + employee.id }>{ employee.signature } { this.employeeTime(employee.id, employee.time_contract) }</th>)\r\n\r\n\t\t\tfor ( const date of this.props.dates ) {\r\n\t\t\t\tconst schedule = this.props.schedules.find(schedule => { return (\r\n\t\t\t\t\tschedule.employee_id == employee.id &&\r\n\t\t\t\t\tschedule.date == date\r\n\t\t\t\t)});\r\n\r\n\t\t\t\tlet scheduleBegin = ( schedule ) ? schedule.begin : \"\";\r\n\t\t\t\tlet scheduleEnd = ( schedule ) ? schedule.end : \"\";\r\n\r\n\t\t\t\tlet tdTitle = \"\";\r\n\t\t\t\tlet tdClassName = \"border-right py-1 align-middle\";\r\n\t\t\t\tlet inputClassName = \"carrotHR__input carrotHR__input--shift form-control\";\r\n\r\n\t\t\t\tif ( Helpers.getDayName(date) == \"sun\" ) tdClassName += \" carrotHR__field--sunday\";\r\n\t\t\t\tif ( schedule && schedule.preference ) tdClassName += \" carrotHR__field--preference\";\r\n\t\t\t\tif ( this.props.settings.holidays.find( holiday => { return ( holiday.date == date ) }) ) tdClassName += \" carrotHR__field--holiday\";\r\n\r\n\t\t\t\tif ( schedule && schedule.validation.is_valid === false ) {\r\n\t\t\t\t\ttdClassName += \" carrotHR__field--warning\"\r\n\t\t\t\t\ttdTitle = schedule.validation.reason;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( this.props.settings.is_absences_layer ) {\r\n\r\n\t\t\t\t} else if ( this.props.settings.is_time_layer ) {\r\n\t\t\t\t\tlet shiftTime = \"\";\r\n\t\t\t\t\tif ( ( Helpers.timeValidator( scheduleBegin ) && Helpers.timeValidator( scheduleEnd ) ) ) {\r\n\t\t\t\t\t\tlet scheduleBeginDate = moment(date + \" \" + scheduleBegin)\r\n\t\t\t\t\t\tlet scheduleEndDate = moment(date + \" \" + scheduleEnd)\r\n\r\n\t\t\t\t\t\tif ( scheduleEndDate.diff(scheduleBeginDate) <= 0 ) {\r\n\t\t\t\t\t\t\tscheduleEndDate.add(1, 'days');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tshiftTime = moment.duration( scheduleEndDate.diff( scheduleBeginDate ) ).format(\"H:mm\");\r\n\t\t\t\t\t} else if( Helpers.shiftValidator( scheduleBegin) ) {\r\n\t\t\t\t\t\tshiftTime = scheduleBegin;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttr.push(\r\n\t\t\t\t\t\t<td id={employee.id + \":\" + date} key={ employee.id + \":\" + date} className={ tdClassName } title={ tdTitle }>\r\n\t\t\t\t\t\t\t<input data-date-id={date} data-employee-id={employee.id} className={ inputClassName } value={ shiftTime } disabled/>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlet endInput = null;\r\n\r\n\t\t\t\t\tif ( schedule && Helpers.timeValidator(schedule.begin) ) {\r\n\t\t\t\t\t\tendInput = <input data-date-id={date} data-employee-id={employee.id} className={ inputClassName } onChange={ this.props.onScheduleEndChange } value={ scheduleEnd } />\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttr.push(\r\n\t\t\t\t\t\t<td id={employee.id + \":\" + date} key={ employee.id + \":\" + date} className={ tdClassName } title={ tdTitle }>\r\n\t\t\t\t\t\t\t<input data-date-id={date} data-employee-id={employee.id} className={ inputClassName } onChange={ this.props.onScheduleBeginChange } value={ scheduleBegin } />\r\n\t\t\t\t\t\t\t{ endInput }\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttbody.push(<tr key={ employee.id } >{ tr }</tr>)\r\n\t\t}\r\n\r\n\t\treturn tbody;\r\n\t}\r\n\r\n\ttableNewRow() {\r\n\t\tconst tr = [];\r\n\t\ttr.push(<th key=\"order-new\">#</th>)\r\n\t\ttr.push(<th key=\"signature-new\"><input key=\"signature-input-new\" onKeyDown={ this.props.onNewEmployee } /></th>)\r\n\r\n\t\tfor ( const date of this.props.dates ) {\r\n\t\t\ttr.push(<td key={date}></td>)\r\n\t\t}\r\n\r\n\t\treturn ( <tr key=\"signature-tr\">{ tr }</tr> );\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<table className=\"carrotHR__table table table-hover table-striped mb-0 text-nowrap border-top\">\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t{ this.tableHeader() }\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{ this.tableData() }\r\n\t\t\t\t\t{ this.tableNewRow() }\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t)\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}