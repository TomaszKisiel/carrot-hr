{"ast":null,"code":"var _jsxFileName = \"/home/tomek/projects/carrot-hr/src/components/Settings.js\";\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Button, Modal, Container, Row, Col, Form, Table } from 'react-bootstrap';\nimport { DAYS, getDayName } from '../helpers';\n\nconst BillingPeriod = props => {\n  if (props.period_type = \"MONTH\") {\n    return /*#__PURE__*/React.createElement(React.Fragment, null);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, [\"2020-Q1\", \"2020-Q2\", \"2020-Q3\", \"2020-Q4\", \"2021-Q1\", \"2021-Q2\", \"2021-Q3\", \"2021-Q4\"].map(period => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: period,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }\n    }, period);\n  }));\n};\n\nfunction Settings() {\n  const [modalShow, setModalShow] = useState(false);\n  const dispatch = useDispatch();\n  const {\n    billing_period,\n    billing_period_type,\n    daily_time,\n    daily_break,\n    weekly_break,\n    free_days,\n    shifts_crew\n  } = useSelector(state => state.settings);\n  const holidays = useSelector(state => state.holidays);\n  let billing_period_select = [];\n\n  if (billing_period_type === \"MONTH\") {} else if (billing_period_type === \"QUARTER\") {}\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    className: \"mr-4\",\n    variant: \"outline-warning\",\n    onClick: () => setModalShow(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 92\n    }\n  }, \" Ustawienia \")), /*#__PURE__*/React.createElement(Modal, {\n    show: modalShow,\n    onHide: () => setModalShow(false),\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, \"Panel Carrot\", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 18\n    }\n  }, \"HR\"))), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"show-grid align-items-center mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: 7,\n    lg: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, \"Rodzaj okresu rozliczeniowy:\"), /*#__PURE__*/React.createElement(Col, {\n    sm: 5,\n    lg: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"select\",\n    value: billing_period_type,\n    onChange: e => dispatch({\n      type: 'BILLING_PERIOD_TYPE',\n      value: e.target.value\n    }),\n    custom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"MONTH\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 8\n    }\n  }, \"Miesi\\u0119czny\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"QUARTER\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 8\n    }\n  }, \"Kwartalny\")))), /*#__PURE__*/React.createElement(Row, {\n    className: \"show-grid align-items-center mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: 6,\n    lg: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, \"Okres rozliczeniowy:\"), /*#__PURE__*/React.createElement(Col, {\n    sm: 6,\n    lg: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"select\",\n    value: billing_period,\n    onChange: e => dispatch({\n      type: 'BILLING_PERIOD',\n      value: e.target.value\n    }),\n    custom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, billing_period_select))), /*#__PURE__*/React.createElement(Row, {\n    className: \"show-grid align-items-center mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: 9,\n    lg: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, \"Maksymalny dzienny czas pracy:\"), /*#__PURE__*/React.createElement(Col, {\n    sm: 3,\n    lg: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    className: \"text-center\",\n    type: \"text\",\n    placeholder: \"0:00\",\n    value: daily_time,\n    onChange: e => dispatch({\n      type: 'DAILY_TIME',\n      value: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 10\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    className: \"show-grid align-items-center mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: 9,\n    lg: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, \"Minimalna przerwa mi\\u0119dzy zmianami:\"), /*#__PURE__*/React.createElement(Col, {\n    sm: 3,\n    lg: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    className: \"text-center\",\n    type: \"text\",\n    placeholder: \"0:00\",\n    value: daily_break,\n    onChange: e => dispatch({\n      type: 'DAILY_BREAK',\n      value: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 8\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    className: \"show-grid align-items-center mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: 9,\n    lg: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, \"Minimalna tygodniowa przerwa:\"), /*#__PURE__*/React.createElement(Col, {\n    sm: 3,\n    lg: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    className: \"text-center\",\n    type: \"text\",\n    placeholder: \"0:00\",\n    value: weekly_break,\n    onChange: e => dispatch({\n      type: 'WEEKLY_BREAK',\n      value: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 8\n    }\n  }))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    className: \"show-grid align-items-center mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    className: \"mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, \" Dni wolne: \"), DAYS.map(key => {\n    return /*#__PURE__*/React.createElement(Col, {\n      xs: 6,\n      md: 4,\n      lg: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(Form.Check, {\n      className: \"pt-1\",\n      type: \"checkbox\",\n      id: `checkbox-${key}`,\n      label: `${getDayName(key)}`,\n      onChange: e => dispatch({\n        type: 'FREE_DAYS',\n        key: key,\n        value: e.target.checked\n      }),\n      checked: free_days[key] !== null ? true : false,\n      custom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }));\n  })), Object.entries(free_days).map(([key, value]) => {\n    if (value !== null) {\n      return /*#__PURE__*/React.createElement(Row, {\n        className: \"show-grid align-items-center mb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 10\n        }\n      }, getDayName(key)), /*#__PURE__*/React.createElement(Col, {\n        xs: 3,\n        lg: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(Form.Control, {\n        className: \"text-center\",\n        type: \"text\",\n        size: \"sm\",\n        value: value.index,\n        onChange: e => dispatch({\n          type: 'FREE_DAYS_INDEX',\n          key: key,\n          value: e.target.value\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        xs: \"auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(Form.Check, {\n        type: \"checkbox\",\n        id: `checkbox-${key}-permanent`,\n        label: \"Sta\\u0142e\",\n        onChange: e => dispatch({\n          type: 'FREE_DAYS_PERMANENT',\n          key: key,\n          value: e.target.checked\n        }),\n        checked: value.permanent,\n        custom: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 10\n        }\n      }));\n    } else {\n      return false;\n    }\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    className: \"show-grid align-items-center mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, \" Minimalna za\\u0142oga pracownicza: \")), /*#__PURE__*/React.createElement(Row, {\n    className: \"show-grid align-items-center mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    bordered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, \"Zmiana:\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"text-center w-15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, \"I\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"text-center w-15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, \"II\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"text-center w-15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, \"III\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, [\"mon\", \"tue\", \"wed\", \"thu\", \"fri\", \"sat\", \"sun\"].map(key => {\n    if (free_days[key] === null || free_days[key] !== null && free_days[key].permanent === false) {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 14\n        }\n      }, getDayName(key)), /*#__PURE__*/React.createElement(\"td\", {\n        className: \"text-center w-15\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(Form.Control, {\n        className: \"text-center\",\n        type: \"text\",\n        size: \"sm\",\n        value: shifts_crew[key].shift_1,\n        onChange: e => dispatch({\n          type: \"SHIFTS_CREW\",\n          key: key,\n          shift: \"shift_1\",\n          value: e.target.value\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        className: \"text-center w-15\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(Form.Control, {\n        className: \"text-center\",\n        type: \"text\",\n        size: \"sm\",\n        value: shifts_crew[key].shift_2,\n        onChange: e => dispatch({\n          type: \"SHIFTS_CREW\",\n          key: key,\n          shift: \"shift_2\",\n          value: e.target.value\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        className: \"text-center w-15\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(Form.Control, {\n        className: \"text-center\",\n        type: \"text\",\n        size: \"sm\",\n        value: shifts_crew[key].shift_3,\n        onChange: e => dispatch({\n          type: \"SHIFTS_CREW\",\n          key: key,\n          shift: \"shift_3\",\n          value: e.target.value\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 15\n        }\n      })));\n    } else {\n      return false;\n    }\n  }))))))), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setModalShow(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 5\n    }\n  }, \" Zamknij \"))));\n}\n\nexport default Settings;","map":{"version":3,"sources":["/home/tomek/projects/carrot-hr/src/components/Settings.js"],"names":["React","useState","useSelector","useDispatch","Button","Modal","Container","Row","Col","Form","Table","DAYS","getDayName","BillingPeriod","props","period_type","map","period","Settings","modalShow","setModalShow","dispatch","billing_period","billing_period_type","daily_time","daily_break","weekly_break","free_days","shifts_crew","state","settings","holidays","billing_period_select","e","type","value","target","key","checked","Object","entries","index","permanent","shift_1","shift","shift_2","shift_3"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Button, Modal, Container, Row, Col, Form, Table } from 'react-bootstrap';\nimport { DAYS, getDayName } from '../helpers'\n\nconst BillingPeriod = (props) => {\n\tif ( props.period_type=\"MONTH\" ) {\n\t\treturn (<>\n\n\t\t</>)\n\t}\n\treturn (<>\n\t\t{ [\"2020-Q1\", \"2020-Q2\", \"2020-Q3\", \"2020-Q4\",\"2021-Q1\", \"2021-Q2\", \"2021-Q3\", \"2021-Q4\"].map(period => {\n\t\t\treturn <option value={period}>{ period }</option>\n\t\t}) }\n\t</>)\n}\n\nfunction Settings() {\n\tconst [modalShow, setModalShow] = useState(false);\n\tconst dispatch = useDispatch();\n\tconst { billing_period, billing_period_type, daily_time, daily_break, weekly_break, free_days, shifts_crew } = useSelector( state => state.settings );\n\tconst holidays = useSelector( state => state.holidays );\n\n\tlet billing_period_select = [];\n\tif( billing_period_type === \"MONTH\" ) {\n\n\t} else if( billing_period_type === \"QUARTER\") {\n\n\t}\n\n\treturn (<>\n\t\t<Button className=\"mr-4\" variant=\"outline-warning\" onClick={ () => setModalShow(true) } ><b> Ustawienia </b></Button>\n\t\t<Modal show={ modalShow } onHide={ () => setModalShow(false) } size=\"lg\">\n\t\t\t<Modal.Header closeButton>\n\t\t\t\t<Modal.Title>\n\t\t\t\t\tPanel Carrot<b>HR</b>\n\t\t\t\t</Modal.Title>\n\t\t\t</Modal.Header>\n\t\t\t<Modal.Body>\n\t\t\t\t<Container>\n\t\t\t\t\t<Row className=\"show-grid align-items-center mb-2\">\n\t\t\t\t\t\t<Col sm={7} lg={8}>\n\t\t\t\t\t\t\tRodzaj okresu rozliczeniowy:\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col sm={5} lg={4}>\n\t\t\t\t\t\t<Form.Control as=\"select\" value={ billing_period_type } onChange={ (e) => dispatch({ type: 'BILLING_PERIOD_TYPE', value: e.target.value }) } custom>\n\t\t\t\t\t\t\t<option value={\"MONTH\"}>Miesięczny</option>\n\t\t\t\t\t\t\t<option value={\"QUARTER\"}>Kwartalny</option>\n\t\t\t\t\t\t</Form.Control>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row className=\"show-grid align-items-center mb-2\">\n\t\t\t\t\t\t<Col sm={6} lg={8}>\n\t\t\t\t\t\t\tOkres rozliczeniowy:\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col sm={6} lg={4}>\n\t\t\t\t\t\t<Form.Control as=\"select\" value={ billing_period } onChange={ (e) => dispatch({ type: 'BILLING_PERIOD', value: e.target.value }) } custom>\n\t\t\t\t\t\t\t{ billing_period_select }\n\t\t\t\t\t\t</Form.Control>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row className=\"show-grid align-items-center mb-2\">\n\t\t\t\t\t\t<Col sm={9} lg={10}>\n\t\t\t  \t\t\t\tMaksymalny dzienny czas pracy:\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col sm={3} lg={2}>\n\t\t\t  \t\t\t\t<Form.Control className=\"text-center\" type=\"text\" placeholder=\"0:00\" value={ daily_time } onChange={ (e) => dispatch({ type: 'DAILY_TIME', value: e.target.value })}/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row className=\"show-grid align-items-center mb-2\">\n\t\t\t\t\t\t<Col sm={9} lg={10}>\n\t\t\t\t\t\t\tMinimalna przerwa między zmianami:\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col sm={3} lg={2}>\n\t\t\t\t\t\t\t<Form.Control className=\"text-center\" type=\"text\" placeholder=\"0:00\" value={ daily_break } onChange={ (e) => dispatch({ type: 'DAILY_BREAK', value: e.target.value })}/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row className=\"show-grid align-items-center mb-2\">\n\t\t\t\t\t\t<Col sm={9} lg={10}>\n\t\t\t\t\t\t\tMinimalna tygodniowa przerwa:\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col sm={3} lg={2}>\n\t\t\t\t\t\t\t<Form.Control className=\"text-center\" type=\"text\" placeholder=\"0:00\" value={ weekly_break } onChange={ (e) => dispatch({ type: 'WEEKLY_BREAK', value: e.target.value }) }/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<hr/>\n\t\t\t\t\t<Row className=\"show-grid align-items-center mb-3\">\n\t\t\t\t\t\t<Col xs={12} className=\"mb-1\"> Dni wolne: </Col>\n\t\t\t\t\t\t{ DAYS.map(key => { return (\n\t\t\t\t\t\t\t<Col xs={6} md={4} lg={3}>\n\t\t\t\t\t\t\t\t<Form.Check className=\"pt-1\" type=\"checkbox\" id={`checkbox-${key}`} label={`${ getDayName( key ) }`} onChange={ (e) => dispatch({ type: 'FREE_DAYS', key: key, value: e.target.checked }) } checked={ ( free_days[key] !== null ) ? true : false } custom />\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t) }) }\n\t\t\t\t\t</Row>\n\t\t\t\t\t{ Object.entries(free_days).map(([key, value]) => {\n\t\t\t\t\t\tif ( value !== null ) {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Row className=\"show-grid align-items-center mb-2\">\n\t\t\t\t\t\t\t\t\t<Col >\n\t\t\t\t\t\t\t\t\t\t{ getDayName( key ) }\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t<Col xs={3} lg={2}>\n\t\t\t\t\t\t\t\t\t\t<Form.Control className=\"text-center\" type=\"text\" size=\"sm\" value={ value.index } onChange={ (e) => dispatch({ type: 'FREE_DAYS_INDEX', key: key, value: e.target.value }) }/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t<Col xs={\"auto\"}>\n\t\t\t\t\t\t\t\t\t\t<Form.Check type=\"checkbox\" id={`checkbox-${key}-permanent`} label=\"Stałe\" onChange={ (e) => dispatch({ type: 'FREE_DAYS_PERMANENT', key: key, value: e.target.checked }) } checked={ value.permanent} custom />\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t<Col xs={12}/>\n\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t})}\n\t\t\t\t\t<hr/>\n\t\t\t\t\t<Row className=\"show-grid align-items-center mb-2\">\n\t\t\t\t\t\t<Col> Minimalna załoga pracownicza: </Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row className=\"show-grid align-items-center mb-2\">\n\t\t\t\t\t\t<Col xs={12}>\n\t\t\t\t\t\t\t<Table bordered>\n\t\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<th>Zmiana:</th>\n\t\t\t\t\t\t\t\t\t\t<th className=\"text-center w-15\">I</th>\n\t\t\t\t\t\t\t\t\t\t<th className=\"text-center w-15\">II</th>\n\t\t\t\t\t\t\t\t\t\t<th className=\"text-center w-15\">III</th>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t{ [\"mon\", \"tue\", \"wed\", \"thu\", \"fri\", \"sat\", \"sun\"].map(key => {\n\t\t\t\t\t\t\t\t\t\tif ( ( free_days[key] === null ) || ( free_days[key] !== null && free_days[key].permanent === false ) ) {\n\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{ getDayName( key ) }</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"text-center w-15\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control className=\"text-center\" type=\"text\" size=\"sm\" value={ shifts_crew[key].shift_1 } onChange={ (e) => dispatch({ type: \"SHIFTS_CREW\", key: key, shift: \"shift_1\", value: e.target.value })} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"text-center w-15\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control className=\"text-center\" type=\"text\" size=\"sm\" value={ shifts_crew[key].shift_2 } onChange={ (e) => dispatch({ type: \"SHIFTS_CREW\", key: key, shift: \"shift_2\", value: e.target.value })} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"text-center w-15\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control className=\"text-center\" type=\"text\" size=\"sm\" value={ shifts_crew[key].shift_3 } onChange={ (e) => dispatch({ type: \"SHIFTS_CREW\", key: key, shift: \"shift_3\", value: e.target.value })} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}) }\n\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t</Modal.Body>\n\t\t\t<Modal.Footer>\n\t\t\t\t<Button onClick={ () => setModalShow(false) }> Zamknij </Button>\n\t\t\t</Modal.Footer>\n\t\t</Modal>\n\t</>)\n}\n\nexport default Settings;\n"]},"metadata":{},"sourceType":"module"}