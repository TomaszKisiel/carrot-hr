{"ast":null,"code":"var _jsxFileName = \"/home/tomek/projects/carrot-hr/src/Components/EmployeesTableManager.js\";\nimport React, { Component } from 'react';\n\nconst format = require('date-format');\n\nconst moment = require('moment');\n\nconst momentDurationFormatSetup = require(\"moment-duration-format\");\n\nconst days = [\"sun\", \"mon\", \"tue\", \"wed\", \"thu\", \"fri\", \"sat\"];\n\nlet getDayName = date => {\n  let dt = new Date(date);\n  return days[dt.getDay()];\n};\n\nconst days_PL = [\"ND\", \"PN\", \"WT\", \"ŚR\", \"CZ\", \"PT\", \"SB\"];\n\nlet getPolishDayName = date => {\n  let dt = new Date(date);\n  return days_PL[dt.getDay()];\n};\n\nlet timeValidator = time => {\n  let reg = /^([0-1]?[0-9]|2[0-4]):([0-5][0-9])(:[0-5][0-9])?$/;\n  return reg.test(time);\n};\n\nlet shiftValidator = shift => {\n  let shifts = [\"1\", \"2\", \"3\", \"W\", \"PN\", \"WT\", \"ŚR\", \"CZ\", \"PT\", \"SB\", \"ND\"];\n  return shifts.includes(shift);\n};\n\nexport default class EmployeesTableManager extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  tableHeader() {\n    let tr = [];\n    tr.push( /*#__PURE__*/React.createElement(\"th\", {\n      key: \"number-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }, \"#\"));\n    tr.push( /*#__PURE__*/React.createElement(\"th\", {\n      className: \"border-right\",\n      key: \"signature-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    }, \"Pracownik\"));\n\n    for (const date of this.props.dates) {\n      tr.push( /*#__PURE__*/React.createElement(\"th\", {\n        \"data-date\": date,\n        key: date,\n        className: \"border-right text-center p-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        class: \"px-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 90\n        }\n      }, format.asString('dd.MM', new Date(date))), /*#__PURE__*/React.createElement(\"hr\", {\n        class: \"m-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 160\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        class: \"px-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 177\n        }\n      }, getPolishDayName(date))));\n    }\n\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: \"tr-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }\n    }, tr);\n  }\n\n  tableData() {\n    let tbody = [];\n\n    for (const [i, employee] of this.props.employees.entries()) {\n      const tr = [];\n      tr.push( /*#__PURE__*/React.createElement(\"th\", {\n        className: \"align-middle\",\n        key: \"number-\" + employee.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 12\n        }\n      }, i + 1));\n      tr.push( /*#__PURE__*/React.createElement(\"th\", {\n        className: \"border-right align-middle\",\n        key: \"signature-\" + employee.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 12\n        }\n      }, employee.signature));\n\n      for (const date of this.props.dates) {\n        const schedule = this.props.schedules.find(schedule => {\n          return schedule.employee_id == employee.id && schedule.date == date;\n        });\n        let scheduleBegin = schedule ? schedule.begin : \"\";\n        let scheduleEnd = schedule ? schedule.end : \"\";\n        let tdTitle = \"\";\n        let tdClassName = \"border-right py-1 align-middle\";\n        let inputClassName = \"carrotHR__input carrotHR__input--shift form-control\";\n        if (getDayName(date) == \"sun\") tdClassName += \" carrotHR__field--sunday\";\n        if (schedule && schedule.preference) tdClassName += \" carrotHR__field--preference\";\n        if (this.props.settings.holidays.find(holiday => {\n          return holiday.date == date;\n        })) tdClassName += \" carrotHR__field--holiday\";\n\n        if (scheduleBegin && !timeValidator(scheduleBegin) && !shiftValidator(scheduleBegin)) {\n          tdClassName += \" carrotHR__field--warning\";\n          tdTitle = \"\\\"\" + scheduleBegin + \"\\\" nie jest poprawnym wpisem.\";\n        }\n\n        if (scheduleBegin && timeValidator(scheduleBegin) && !timeValidator(scheduleEnd)) {\n          tdClassName += \" carrotHR__field--warning\";\n          tdTitle = \"\\\"\" + scheduleEnd + \"\\\" nie jest poprawnym wpisem.\";\n        }\n\n        let shiftTime = \"\";\n\n        if (timeValidator(scheduleBegin) && timeValidator(scheduleEnd)) {\n          let scheduleBeginDate = moment(date + \" \" + scheduleBegin);\n          let scheduleEndDate = moment(date + \" \" + scheduleEnd);\n\n          if (scheduleEndDate.diff(scheduleBeginDate) <= 0) {\n            scheduleEndDate.add(1, 'days');\n          }\n\n          shiftTime = moment.duration(scheduleEndDate.diff(scheduleBeginDate));\n          let norm = shiftTime.asHours() - this.props.settings.max_daily_time;\n\n          if (norm > 0) {\n            tdClassName += \" carrotHR__field--warning\";\n            tdTitle = \" Przekroczono normę czasu pracy o \" + norm + \"h.\";\n          }\n\n          shiftTime = shiftTime.format(\"H:mm\");\n        } else if (shiftValidator(scheduleBegin)) {\n          shiftTime = scheduleBegin;\n        }\n\n        if (this.props.settings.is_absences_layer) {} else if (this.props.settings.is_time_layer) {\n          tr.push( /*#__PURE__*/React.createElement(\"td\", {\n            id: employee.id + \":\" + date,\n            key: employee.id + \":\" + date,\n            className: tdClassName,\n            title: tdTitle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 7\n            }\n          }, /*#__PURE__*/React.createElement(\"input\", {\n            \"data-date-id\": date,\n            \"data-employee-id\": employee.id,\n            className: inputClassName,\n            value: shiftTime,\n            disabled: true,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 8\n            }\n          })));\n        } else {\n          let endInput = null;\n\n          if (schedule && timeValidator(schedule.begin) && !shiftValidator(schedule.begin)) {\n            endInput = /*#__PURE__*/React.createElement(\"input\", {\n              \"data-date-id\": date,\n              \"data-employee-id\": employee.id,\n              className: inputClassName,\n              onChange: this.props.onScheduleEndChange,\n              value: scheduleEnd,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 18\n              }\n            });\n          }\n\n          tr.push( /*#__PURE__*/React.createElement(\"td\", {\n            id: employee.id + \":\" + date,\n            key: employee.id + \":\" + date,\n            className: tdClassName,\n            title: tdTitle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 7\n            }\n          }, /*#__PURE__*/React.createElement(\"input\", {\n            \"data-date-id\": date,\n            \"data-employee-id\": employee.id,\n            className: inputClassName,\n            onChange: this.props.onScheduleBeginChange,\n            value: scheduleBegin,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 8\n            }\n          }), endInput));\n        }\n      }\n\n      tbody.push( /*#__PURE__*/React.createElement(\"tr\", {\n        key: employee.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }\n      }, tr));\n    }\n\n    return tbody;\n  }\n\n  tableNewRow() {\n    const tr = [];\n    tr.push( /*#__PURE__*/React.createElement(\"th\", {\n      key: \"order-new\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }\n    }, \"#\"));\n    tr.push( /*#__PURE__*/React.createElement(\"th\", {\n      key: \"signature-new\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      key: \"signature-input-new\",\n      onKeyDown: this.props.onNewEmployee,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 35\n      }\n    })));\n\n    for (const date of this.props.dates) {\n      tr.push( /*#__PURE__*/React.createElement(\"td\", {\n        key: date,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 12\n        }\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: \"signature-tr\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 12\n      }\n    }, tr);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"table\", {\n      className: \"carrotHR__table table table-hover table-striped mb-0 text-nowrap border-top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 5\n      }\n    }, this.tableHeader()), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 5\n      }\n    }, this.tableData(), this.tableNewRow()));\n  }\n\n}","map":{"version":3,"sources":["/home/tomek/projects/carrot-hr/src/Components/EmployeesTableManager.js"],"names":["React","Component","format","require","moment","momentDurationFormatSetup","days","getDayName","date","dt","Date","getDay","days_PL","getPolishDayName","timeValidator","time","reg","test","shiftValidator","shift","shifts","includes","EmployeesTableManager","constructor","props","tableHeader","tr","push","dates","asString","tableData","tbody","i","employee","employees","entries","id","signature","schedule","schedules","find","employee_id","scheduleBegin","begin","scheduleEnd","end","tdTitle","tdClassName","inputClassName","preference","settings","holidays","holiday","shiftTime","scheduleBeginDate","scheduleEndDate","diff","add","duration","norm","asHours","max_daily_time","is_absences_layer","is_time_layer","endInput","onScheduleEndChange","onScheduleBeginChange","tableNewRow","onNewEmployee","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nconst format = require('date-format');\r\nconst moment = require('moment');\r\nconst momentDurationFormatSetup = require(\"moment-duration-format\");\r\n\r\nconst days = [\"sun\", \"mon\", \"tue\", \"wed\", \"thu\", \"fri\", \"sat\"];\r\nlet getDayName = (date) => {\r\n\tlet dt = new Date(date);\r\n\treturn days[dt.getDay()];\r\n}\r\n\r\nconst days_PL = [\"ND\", \"PN\", \"WT\", \"ŚR\", \"CZ\", \"PT\", \"SB\"];\r\nlet getPolishDayName = (date) => {\r\n\tlet dt = new Date(date);\r\n\treturn days_PL[dt.getDay()];\r\n}\r\n\r\nlet timeValidator = (time) => {\r\n\tlet reg = /^([0-1]?[0-9]|2[0-4]):([0-5][0-9])(:[0-5][0-9])?$/;\r\n\treturn reg.test(time);\r\n}\r\n\r\nlet shiftValidator = (shift) => {\r\n\tlet shifts = [\"1\", \"2\", \"3\", \"W\", \"PN\", \"WT\", \"ŚR\", \"CZ\", \"PT\", \"SB\", \"ND\"];\r\n\treturn shifts.includes(shift)\r\n}\r\n\r\nexport default class EmployeesTableManager extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\ttableHeader() {\r\n\t\tlet tr = []\r\n\r\n\t\ttr.push(<th key=\"number-header\" >#</th>)\r\n\t\ttr.push(<th className=\"border-right\" key=\"signature-header\">Pracownik</th>)\r\n\r\n\t    for ( const date of this.props.dates ) {\r\n\t      \ttr.push(<th data-date={date} key={date} className=\"border-right text-center p-0\"><span class=\"px-3\">{ format.asString('dd.MM', new Date(date)) }</span><hr class=\"m-0\"/><span class=\"px-3\">{ getPolishDayName(date) }</span></th>)\r\n\t    }\r\n\t    return ( <tr key=\"tr-header\">{ tr }</tr> )\r\n\t}\r\n\r\n\ttableData() {\r\n\t\tlet tbody = []\r\n\r\n\t\tfor ( const [i, employee] of this.props.employees.entries() ) {\r\n\t\t\tconst tr = []\r\n\r\n\t\t\ttr.push(<th className=\"align-middle\" key={ \"number-\" + employee.id }>{ i + 1 }</th>)\r\n\t\t\ttr.push(<th className=\"border-right align-middle\" key={ \"signature-\" + employee.id }>{ employee.signature }</th>)\r\n\r\n\t\t\tfor ( const date of this.props.dates ) {\r\n\t\t\t\tconst schedule = this.props.schedules.find(schedule => { return (\r\n\t\t\t\t\tschedule.employee_id == employee.id &&\r\n\t\t\t\t\tschedule.date == date\r\n\t\t\t\t)});\r\n\r\n\t\t\t\tlet scheduleBegin = ( schedule ) ? schedule.begin : \"\";\r\n\t\t\t\tlet scheduleEnd = ( schedule ) ? schedule.end : \"\";\r\n\r\n\t\t\t\tlet tdTitle = \"\";\r\n\t\t\t\tlet tdClassName = \"border-right py-1 align-middle\";\r\n\t\t\t\tlet inputClassName = \"carrotHR__input carrotHR__input--shift form-control\";\r\n\r\n\t\t\t\tif ( getDayName(date) == \"sun\" ) tdClassName += \" carrotHR__field--sunday\";\r\n\t\t\t\tif ( schedule && schedule.preference ) tdClassName += \" carrotHR__field--preference\";\r\n\t\t\t\tif ( this.props.settings.holidays.find( holiday => { return ( holiday.date == date ) }) ) tdClassName += \" carrotHR__field--holiday\";\r\n\t\t\t\tif ( scheduleBegin && ! timeValidator( scheduleBegin ) && ! shiftValidator( scheduleBegin ) ) {\r\n\t\t\t\t\ttdClassName += \" carrotHR__field--warning\"\r\n\t\t\t\t\ttdTitle = \"\\\"\" + scheduleBegin + \"\\\" nie jest poprawnym wpisem.\";\r\n\t\t\t\t}\r\n\t\t\t\tif ( scheduleBegin && timeValidator( scheduleBegin ) && ! timeValidator ( scheduleEnd )) {\r\n\t\t\t\t\ttdClassName += \" carrotHR__field--warning\"\r\n\t\t\t\t\ttdTitle = \"\\\"\" + scheduleEnd + \"\\\" nie jest poprawnym wpisem.\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet shiftTime = \"\";\r\n\t\t\t\tif ( ( timeValidator( scheduleBegin ) && timeValidator( scheduleEnd ) ) ) {\r\n\t\t\t\t\tlet scheduleBeginDate = moment(date + \" \" + scheduleBegin)\r\n\t\t\t\t\tlet scheduleEndDate = moment(date + \" \" + scheduleEnd)\r\n\r\n\t\t\t\t\tif ( scheduleEndDate.diff(scheduleBeginDate) <= 0 ) {\r\n\t\t\t\t\t\tscheduleEndDate.add(1, 'days');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tshiftTime = moment.duration( scheduleEndDate.diff( scheduleBeginDate ) );\r\n\r\n\t\t\t\t\tlet norm = shiftTime.asHours() - this.props.settings.max_daily_time\r\n\t\t\t\t\tif ( norm > 0 ) {\r\n\t\t\t\t\t\ttdClassName += \" carrotHR__field--warning\";\r\n\t\t\t\t\t\ttdTitle = \" Przekroczono normę czasu pracy o \" + norm + \"h.\";\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tshiftTime = shiftTime.format(\"H:mm\");\r\n\t\t\t\t} else if( shiftValidator( scheduleBegin) ) {\r\n\t\t\t\t\tshiftTime = scheduleBegin;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( this.props.settings.is_absences_layer ) {\r\n\r\n\t\t\t\t} else if ( this.props.settings.is_time_layer ) {\r\n\t\t\t\t\ttr.push(\r\n\t\t\t\t\t\t<td id={employee.id + \":\" + date} key={ employee.id + \":\" + date} className={ tdClassName } title={ tdTitle }>\r\n\t\t\t\t\t\t\t<input data-date-id={date} data-employee-id={employee.id} className={ inputClassName } value={ shiftTime } disabled/>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlet endInput = null;\r\n\r\n\t\t\t\t\tif ( schedule && timeValidator(schedule.begin) && !shiftValidator(schedule.begin) ) {\r\n\t\t\t\t\t\tendInput = <input data-date-id={date} data-employee-id={employee.id} className={ inputClassName } onChange={ this.props.onScheduleEndChange } value={ scheduleEnd } />\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttr.push(\r\n\t\t\t\t\t\t<td id={employee.id + \":\" + date} key={ employee.id + \":\" + date} className={ tdClassName } title={ tdTitle }>\r\n\t\t\t\t\t\t\t<input data-date-id={date} data-employee-id={employee.id} className={ inputClassName } onChange={ this.props.onScheduleBeginChange } value={ scheduleBegin } />\r\n\t\t\t\t\t\t\t{ endInput }\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttbody.push(<tr key={ employee.id } >{ tr }</tr>)\r\n\t\t}\r\n\r\n\t\treturn tbody;\r\n\t}\r\n\r\n\ttableNewRow() {\r\n\t\tconst tr = [];\r\n\t\ttr.push(<th key=\"order-new\">#</th>)\r\n\t\ttr.push(<th key=\"signature-new\"><input key=\"signature-input-new\" onKeyDown={ this.props.onNewEmployee } /></th>)\r\n\r\n\t\tfor ( const date of this.props.dates ) {\r\n\t\t\ttr.push(<td key={date}></td>)\r\n\t\t}\r\n\r\n\t\treturn ( <tr key=\"signature-tr\">{ tr }</tr> );\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<table className=\"carrotHR__table table table-hover table-striped mb-0 text-nowrap border-top\">\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t{ this.tableHeader() }\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{ this.tableData() }\r\n\t\t\t\t\t{ this.tableNewRow() }\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t)\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}