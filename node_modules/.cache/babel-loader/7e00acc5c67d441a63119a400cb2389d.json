{"ast":null,"code":"var _jsxFileName = \"/home/tomek/projects/carrot-hr/src/Components/EmployeesTableManager.js\";\nimport React, { Component } from 'react';\nimport * as Helpers from './Helpers.js';\n\nconst format = require('date-format');\n\nconst moment = require('moment');\n\nconst momentDurationFormatSetup = require(\"moment-duration-format\");\n\nexport default class EmployeesTableManager extends Component {\n  constructor(props) {\n    super(props);\n\n    this.employeeTime = (employee_id, time_contract) => {\n      let calculateTime = (base, div) => {\n        let time = 0;\n        const weeks = Helpers.chunk([...this.props.dates], 7);\n\n        for (const week of weeks) {\n          for (const date of week) {\n            let free_day = this.props.settings.free_days.find(free_day => {\n              return free_day.day === Helpers.getDayName(date);\n            });\n            let holiday = this.props.settings.holidays.find(holiday => {\n              return holiday.date == date;\n            });\n            if (!free_day && !holiday) time += 1 * (base * div);\n          }\n        }\n\n        return time;\n      };\n\n      let time = calculateTime(8, time_contract);\n      const schedules = [...this.props.schedules].filter(schedule => {\n        return schedule.employee_id === employee_id;\n      });\n\n      for (const schedule of schedules) {\n        if (Helpers.timeValidator(schedule.begin) && Helpers.timeValidator(schedule.end)) {\n          let scheduleBegin = moment(schedule.date + \" \" + schedule.begin);\n          let scheduleEnd = moment(schedule.date + \" \" + schedule.end);\n\n          if (scheduleEnd.diff(scheduleBegin) <= 0) {\n            scheduleEnd.add(1, 'days');\n          }\n\n          let diff = moment.duration(scheduleEnd.diff(scheduleBegin)).asHours();\n          time -= diff;\n        }\n      }\n\n      return time;\n    };\n  }\n\n  tableHeader() {\n    let tr = [];\n    tr.push( /*#__PURE__*/React.createElement(\"th\", {\n      key: \"number-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }\n    }, \"#\"));\n    tr.push( /*#__PURE__*/React.createElement(\"th\", {\n      className: \"border-right\",\n      key: \"signature-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }\n    }, \"Pracownik\"));\n\n    for (const date of this.props.dates) {\n      tr.push( /*#__PURE__*/React.createElement(\"th\", {\n        \"data-date\": date,\n        key: date,\n        className: \"border-right text-center p-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        class: \"px-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 90\n        }\n      }, format.asString('dd.MM', new Date(date))), /*#__PURE__*/React.createElement(\"hr\", {\n        class: \"m-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 160\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        class: \"px-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 177\n        }\n      }, Helpers.getPolishDayName(date))));\n    }\n\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: \"tr-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 15\n      }\n    }, tr);\n  }\n\n  tableData() {\n    let tbody = [];\n\n    for (const [i, employee] of this.props.employees.entries()) {\n      const tr = [];\n      tr.push( /*#__PURE__*/React.createElement(\"th\", {\n        className: \"align-middle\",\n        key: \"number-\" + employee.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 12\n        }\n      }, i + 1));\n      tr.push( /*#__PURE__*/React.createElement(\"th\", {\n        className: \"border-right align-middle\",\n        key: \"signature-\" + employee.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 12\n        }\n      }, employee.signature, \" ( \", this.employeeTime(employee.id, employee.time_contract), \"h )\"));\n\n      for (const date of this.props.dates) {\n        const schedule = this.props.schedules.find(schedule => {\n          return schedule.employee_id == employee.id && schedule.date == date;\n        });\n        let scheduleBegin = schedule ? schedule.begin : \"\";\n        let scheduleEnd = schedule ? schedule.end : \"\";\n        let tdTitle = \"\";\n        let tdClassName = \"border-right py-1 align-middle\";\n        let inputClassName = \"carrotHR__input carrotHR__input--shift form-control\";\n        if (Helpers.getDayName(date) == \"sun\") tdClassName += \" carrotHR__field--sunday\";\n        if (schedule && schedule.preference) tdClassName += \" carrotHR__field--preference\";\n        if (this.props.settings.holidays.find(holiday => {\n          return holiday.date == date;\n        })) tdClassName += \" carrotHR__field--holiday\";\n\n        if (schedule && schedule.validation.is_valid === false) {\n          tdClassName += \" carrotHR__field--warning\";\n          tdTitle = schedule.validation.reason;\n        }\n\n        if (this.props.settings.is_absences_layer) {} else if (this.props.settings.is_time_layer) {\n          let shiftTime = \"\";\n\n          if (Helpers.timeValidator(scheduleBegin) && Helpers.timeValidator(scheduleEnd)) {\n            let scheduleBeginDate = moment(date + \" \" + scheduleBegin);\n            let scheduleEndDate = moment(date + \" \" + scheduleEnd);\n\n            if (scheduleEndDate.diff(scheduleBeginDate) <= 0) {\n              scheduleEndDate.add(1, 'days');\n            }\n\n            shiftTime = moment.duration(scheduleEndDate.diff(scheduleBeginDate)).format(\"H:mm\");\n          } else if (Helpers.shiftValidator(scheduleBegin)) {\n            shiftTime = scheduleBegin;\n          }\n\n          tr.push( /*#__PURE__*/React.createElement(\"td\", {\n            id: employee.id + \":\" + date,\n            key: employee.id + \":\" + date,\n            className: tdClassName,\n            title: tdTitle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 7\n            }\n          }, /*#__PURE__*/React.createElement(\"input\", {\n            \"data-date-id\": date,\n            \"data-employee-id\": employee.id,\n            className: inputClassName,\n            value: shiftTime,\n            disabled: true,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 8\n            }\n          })));\n        } else {\n          let endInput = null;\n\n          if (schedule && Helpers.timeValidator(schedule.begin)) {\n            endInput = /*#__PURE__*/React.createElement(\"input\", {\n              \"data-date-id\": date,\n              \"data-employee-id\": employee.id,\n              className: inputClassName,\n              onChange: this.props.onScheduleEndChange,\n              value: scheduleEnd,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 18\n              }\n            });\n          }\n\n          tr.push( /*#__PURE__*/React.createElement(\"td\", {\n            id: employee.id + \":\" + date,\n            key: employee.id + \":\" + date,\n            className: tdClassName,\n            title: tdTitle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 7\n            }\n          }, /*#__PURE__*/React.createElement(\"input\", {\n            \"data-date-id\": date,\n            \"data-employee-id\": employee.id,\n            className: inputClassName,\n            onChange: this.props.onScheduleBeginChange,\n            value: scheduleBegin,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 8\n            }\n          }), endInput));\n        }\n      }\n\n      tbody.push( /*#__PURE__*/React.createElement(\"tr\", {\n        key: employee.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }\n      }, tr));\n    }\n\n    return tbody;\n  }\n\n  tableNewRow() {\n    const tr = [];\n    tr.push( /*#__PURE__*/React.createElement(\"th\", {\n      key: \"order-new\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }\n    }, \"#\"));\n    tr.push( /*#__PURE__*/React.createElement(\"th\", {\n      key: \"signature-new\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      key: \"signature-input-new\",\n      onKeyDown: this.props.onNewEmployee,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 35\n      }\n    })));\n\n    for (const date of this.props.dates) {\n      tr.push( /*#__PURE__*/React.createElement(\"td\", {\n        key: date,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 12\n        }\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: \"signature-tr\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 12\n      }\n    }, tr);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"table\", {\n      className: \"carrotHR__table table table-hover table-striped mb-0 text-nowrap border-top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 5\n      }\n    }, this.tableHeader()), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 5\n      }\n    }, this.tableData(), this.tableNewRow()));\n  }\n\n}","map":{"version":3,"sources":["/home/tomek/projects/carrot-hr/src/Components/EmployeesTableManager.js"],"names":["React","Component","Helpers","format","require","moment","momentDurationFormatSetup","EmployeesTableManager","constructor","props","employeeTime","employee_id","time_contract","calculateTime","base","div","time","weeks","chunk","dates","week","date","free_day","settings","free_days","find","day","getDayName","holiday","holidays","schedules","filter","schedule","timeValidator","begin","end","scheduleBegin","scheduleEnd","diff","add","duration","asHours","tableHeader","tr","push","asString","Date","getPolishDayName","tableData","tbody","i","employee","employees","entries","id","signature","tdTitle","tdClassName","inputClassName","preference","validation","is_valid","reason","is_absences_layer","is_time_layer","shiftTime","scheduleBeginDate","scheduleEndDate","shiftValidator","endInput","onScheduleEndChange","onScheduleBeginChange","tableNewRow","onNewEmployee","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport * as Helpers from'./Helpers.js';\r\n\r\nconst format = require('date-format');\r\nconst moment = require('moment');\r\nconst momentDurationFormatSetup = require(\"moment-duration-format\");\r\n\r\nexport default class EmployeesTableManager extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\ttableHeader() {\r\n\t\tlet tr = []\r\n\r\n\t\ttr.push(<th key=\"number-header\" >#</th>)\r\n\t\ttr.push(<th className=\"border-right\" key=\"signature-header\">Pracownik</th>)\r\n\r\n\t    for ( const date of this.props.dates ) {\r\n\t      \ttr.push(<th data-date={date} key={date} className=\"border-right text-center p-0\"><span class=\"px-3\">{ format.asString('dd.MM', new Date(date)) }</span><hr class=\"m-0\"/><span class=\"px-3\">{ Helpers.getPolishDayName(date) }</span></th>)\r\n\t    }\r\n\t    return ( <tr key=\"tr-header\">{ tr }</tr> )\r\n\t}\r\n\r\n\temployeeTime = (employee_id, time_contract) => {\r\n\t\tlet calculateTime = (base, div) => {\r\n\t\t\tlet time = 0;\r\n\t\t\tconst weeks = Helpers.chunk([...this.props.dates], 7);\r\n\t\t\tfor ( const week of weeks ) {\r\n\t\t\t\tfor ( const date of week ) {\r\n\t\t\t\t\tlet free_day = this.props.settings.free_days.find(free_day => { return ( free_day.day === Helpers.getDayName(date)) });\r\n\t\t\t\t\tlet holiday = this.props.settings.holidays.find( holiday => { return ( holiday.date == date ) } )\r\n\t\t\t\t\tif ( !free_day && !holiday ) time += 1 * ( base * div);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn time;\r\n\t\t}\r\n\t\tlet time = calculateTime(8, time_contract)\r\n\r\n\t\tconst schedules = [ ...this.props.schedules ].filter(schedule => { return ( schedule.employee_id === employee_id ) } )\r\n\t\tfor ( const schedule of schedules ) {\r\n\t\t\tif ( Helpers.timeValidator( schedule.begin ) && Helpers.timeValidator( schedule.end ) ) {\r\n\t\t\t\tlet scheduleBegin = moment(schedule.date + \" \" + schedule.begin)\r\n\t\t\t\tlet scheduleEnd = moment(schedule.date + \" \" + schedule.end)\r\n\r\n\t\t\t\tif ( scheduleEnd.diff(scheduleBegin) <= 0 ) {\r\n\t\t\t\t\tscheduleEnd.add(1, 'days');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet diff = moment.duration( scheduleEnd.diff( scheduleBegin ) ).asHours();\r\n\t\t\t\ttime -= diff;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn time;\r\n\t}\r\n\r\n\ttableData() {\r\n\t\tlet tbody = []\r\n\r\n\t\tfor ( const [i, employee] of this.props.employees.entries() ) {\r\n\t\t\tconst tr = []\r\n\r\n\t\t\ttr.push(<th className=\"align-middle\" key={ \"number-\" + employee.id }>{ i + 1 }</th>)\r\n\t\t\ttr.push(<th className=\"border-right align-middle\" key={ \"signature-\" + employee.id }>{ employee.signature } ( { this.employeeTime(employee.id, employee.time_contract)}h )</th>)\r\n\r\n\t\t\tfor ( const date of this.props.dates ) {\r\n\t\t\t\tconst schedule = this.props.schedules.find(schedule => { return (\r\n\t\t\t\t\tschedule.employee_id == employee.id &&\r\n\t\t\t\t\tschedule.date == date\r\n\t\t\t\t)});\r\n\r\n\t\t\t\tlet scheduleBegin = ( schedule ) ? schedule.begin : \"\";\r\n\t\t\t\tlet scheduleEnd = ( schedule ) ? schedule.end : \"\";\r\n\r\n\t\t\t\tlet tdTitle = \"\";\r\n\t\t\t\tlet tdClassName = \"border-right py-1 align-middle\";\r\n\t\t\t\tlet inputClassName = \"carrotHR__input carrotHR__input--shift form-control\";\r\n\r\n\t\t\t\tif ( Helpers.getDayName(date) == \"sun\" ) tdClassName += \" carrotHR__field--sunday\";\r\n\t\t\t\tif ( schedule && schedule.preference ) tdClassName += \" carrotHR__field--preference\";\r\n\t\t\t\tif ( this.props.settings.holidays.find( holiday => { return ( holiday.date == date ) }) ) tdClassName += \" carrotHR__field--holiday\";\r\n\r\n\t\t\t\tif ( schedule && schedule.validation.is_valid === false ) {\r\n\t\t\t\t\ttdClassName += \" carrotHR__field--warning\"\r\n\t\t\t\t\ttdTitle = schedule.validation.reason;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( this.props.settings.is_absences_layer ) {\r\n\r\n\t\t\t\t} else if ( this.props.settings.is_time_layer ) {\r\n\t\t\t\t\tlet shiftTime = \"\";\r\n\t\t\t\t\tif ( ( Helpers.timeValidator( scheduleBegin ) && Helpers.timeValidator( scheduleEnd ) ) ) {\r\n\t\t\t\t\t\tlet scheduleBeginDate = moment(date + \" \" + scheduleBegin)\r\n\t\t\t\t\t\tlet scheduleEndDate = moment(date + \" \" + scheduleEnd)\r\n\r\n\t\t\t\t\t\tif ( scheduleEndDate.diff(scheduleBeginDate) <= 0 ) {\r\n\t\t\t\t\t\t\tscheduleEndDate.add(1, 'days');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tshiftTime = moment.duration( scheduleEndDate.diff( scheduleBeginDate ) ).format(\"H:mm\");\r\n\t\t\t\t\t} else if( Helpers.shiftValidator( scheduleBegin) ) {\r\n\t\t\t\t\t\tshiftTime = scheduleBegin;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttr.push(\r\n\t\t\t\t\t\t<td id={employee.id + \":\" + date} key={ employee.id + \":\" + date} className={ tdClassName } title={ tdTitle }>\r\n\t\t\t\t\t\t\t<input data-date-id={date} data-employee-id={employee.id} className={ inputClassName } value={ shiftTime } disabled/>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlet endInput = null;\r\n\r\n\t\t\t\t\tif ( schedule && Helpers.timeValidator(schedule.begin) ) {\r\n\t\t\t\t\t\tendInput = <input data-date-id={date} data-employee-id={employee.id} className={ inputClassName } onChange={ this.props.onScheduleEndChange } value={ scheduleEnd } />\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttr.push(\r\n\t\t\t\t\t\t<td id={employee.id + \":\" + date} key={ employee.id + \":\" + date} className={ tdClassName } title={ tdTitle }>\r\n\t\t\t\t\t\t\t<input data-date-id={date} data-employee-id={employee.id} className={ inputClassName } onChange={ this.props.onScheduleBeginChange } value={ scheduleBegin } />\r\n\t\t\t\t\t\t\t{ endInput }\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttbody.push(<tr key={ employee.id } >{ tr }</tr>)\r\n\t\t}\r\n\r\n\t\treturn tbody;\r\n\t}\r\n\r\n\ttableNewRow() {\r\n\t\tconst tr = [];\r\n\t\ttr.push(<th key=\"order-new\">#</th>)\r\n\t\ttr.push(<th key=\"signature-new\"><input key=\"signature-input-new\" onKeyDown={ this.props.onNewEmployee } /></th>)\r\n\r\n\t\tfor ( const date of this.props.dates ) {\r\n\t\t\ttr.push(<td key={date}></td>)\r\n\t\t}\r\n\r\n\t\treturn ( <tr key=\"signature-tr\">{ tr }</tr> );\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<table className=\"carrotHR__table table table-hover table-striped mb-0 text-nowrap border-top\">\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t{ this.tableHeader() }\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{ this.tableData() }\r\n\t\t\t\t\t{ this.tableNewRow() }\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t)\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}