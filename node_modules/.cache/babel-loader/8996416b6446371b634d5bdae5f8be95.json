{"ast":null,"code":"import { DAYS } from '../helpers';\nconst initialState = {\n  is_absences_layer: false,\n  is_time_layer: false,\n  billing_period_type: \"MONTH\",\n  billing_period: \"2020-01\",\n\n  /* 2020-01 */\n  daily_time: \"12:00\",\n  daily_break: \"13:00\",\n  weekly_break: \"35:00\",\n  free_days: {\n    mon: null,\n    tue: null,\n    wed: null,\n    thu: null,\n    fri: null,\n    sat: {\n      index: \"SB\",\n      permanent: false\n    },\n    sun: {\n      index: \"ND\",\n      permanent: true\n    }\n  },\n  shifts_crew: {\n    sun: {\n      shift_1: 0,\n      shift_2: 0,\n      shift_3: 0\n    },\n    mon: {\n      shift_1: 5,\n      shift_2: 5,\n      shift_3: 0\n    },\n    tue: {\n      shift_1: 4,\n      shift_2: 4,\n      shift_3: 0\n    },\n    wed: {\n      shift_1: 5,\n      shift_2: 4,\n      shift_3: 0\n    },\n    thu: {\n      shift_1: 4,\n      shift_2: 4,\n      shift_3: 0\n    },\n    fri: {\n      shift_1: 4,\n      shift_2: 4,\n      shift_3: 0\n    },\n    sat: {\n      shift_1: 5,\n      shift_2: 4,\n      shift_3: 0\n    }\n  }\n};\n\nconst settingsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'DAILY_TIME':\n      {\n        return { ...state,\n          daily_time: action.value\n        };\n      }\n\n    case 'DAILY_BREAK':\n      {\n        return { ...state,\n          daily_break: action.value\n        };\n      }\n\n    case 'WEEKLY_BREAK':\n      {\n        return { ...state,\n          weekly_break: action.value\n        };\n      }\n\n    case 'FREE_DAYS':\n      {\n        let free_days = state.free_days;\n\n        if (DAYS.includes(action.key)) {\n          if (action.value === true) {\n            free_days[action.key] = {\n              index: `${action.key.toUpperCase()}`,\n              permanent: true\n            };\n          } else {\n            free_days[action.key] = null;\n          }\n        }\n\n        return { ...state,\n          free_days\n        };\n      }\n\n    case 'FREE_DAYS_INDEX':\n      {\n        let free_days = state.free_days;\n\n        if (DAYS.includes(action.key)) {\n          free_days[action.key].index = action.value;\n        }\n\n        return { ...state,\n          free_days\n        };\n      }\n\n    case 'FREE_DAYS_PERMANENT':\n      {\n        let free_days = state.free_days;\n\n        if (DAYS.includes(action.key)) {\n          free_days[action.key].permanent = action.value;\n        }\n\n        return { ...state,\n          free_days\n        };\n      }\n\n    case 'SHIFTS_CREW':\n      {\n        let shifts_crew = state.shifts_crew;\n\n        if (DAYS.includes(action.key)) {\n          shifts_crew[action.key][action.shift] = action.value;\n        }\n\n        return { ...state,\n          shifts_crew\n        };\n      }\n\n    case 'ABSENCES':\n      {\n        state.is_absences_layer = !state.is_absences_layer;\n        state.is_time_layer = false;\n        return { ...state\n        };\n      }\n\n    case 'BILLING_PERIOD_TYPE':\n      {\n        return { ...state,\n          billing_period_type: action.value\n        };\n      }\n\n    case 'BILLING_PERIOD':\n      {\n        return { ...state,\n          billing_period: action.value\n        };\n      }\n\n    case 'WORK_TIME':\n      {\n        state.is_absences_layer = false;\n        state.is_time_layer = !state.is_time_layer;\n        return { ...state\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default settingsReducer;","map":{"version":3,"sources":["/home/tomek/projects/carrot-hr/src/reducers/settings.js"],"names":["DAYS","initialState","is_absences_layer","is_time_layer","billing_period_type","billing_period","daily_time","daily_break","weekly_break","free_days","mon","tue","wed","thu","fri","sat","index","permanent","sun","shifts_crew","shift_1","shift_2","shift_3","settingsReducer","state","action","type","value","includes","key","toUpperCase","shift"],"mappings":"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","sourcesContent":["import { DAYS } from '../helpers'\n\nconst initialState = {\n\tis_absences_layer: false,\n\tis_time_layer: false,\n\tbilling_period_type: \"MONTH\",\n\tbilling_period: \"2020-01\", /* 2020-01 */\n\tdaily_time: \"12:00\",\n\tdaily_break: \"13:00\",\n\tweekly_break: \"35:00\",\n\tfree_days: {\n\t\tmon: null,\n\t\ttue: null,\n\t\twed: null,\n\t\tthu: null,\n\t\tfri: null,\n\t\tsat: { index: \"SB\", permanent: false},\n\t\tsun: { index: \"ND\", permanent: true},\n\t},\n\tshifts_crew: {\n\t\tsun: { shift_1: 0, shift_2: 0, shift_3: 0 },\n\t\tmon: { shift_1: 5, shift_2: 5, shift_3: 0 },\n\t\ttue: { shift_1: 4, shift_2: 4, shift_3: 0 },\n\t\twed: { shift_1: 5, shift_2: 4, shift_3: 0 },\n\t\tthu: { shift_1: 4, shift_2: 4, shift_3: 0 },\n\t\tfri: { shift_1: 4, shift_2: 4, shift_3: 0 },\n\t\tsat: { shift_1: 5, shift_2: 4, shift_3: 0 },\n\t}\n}\n\nconst settingsReducer = ( state = initialState, action ) => {\n\tswitch ( action.type ) {\n\t\tcase 'DAILY_TIME': {\n\t\t\treturn { ...state, daily_time: action.value }\n\t\t}\n\t\tcase 'DAILY_BREAK': {\n\t\t\treturn { ...state, daily_break: action.value }\n\t\t}\n\t\tcase 'WEEKLY_BREAK': {\n\t\t\treturn { ...state, weekly_break: action.value }\n\t\t}\n\t\tcase 'FREE_DAYS': {\n\t\t\tlet free_days = state.free_days;\n\t\t\tif ( DAYS.includes(action.key) ) {\n\t\t\t\tif ( action.value === true ) {\n\t\t\t\t\tfree_days[ action.key ] = { index: `${action.key.toUpperCase()}`, permanent: true };\n\t\t\t\t} else {\n\t\t\t\t\tfree_days[ action.key ] = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn { ...state, free_days }\n\t\t}\n\t\tcase 'FREE_DAYS_INDEX': {\n\t\t\tlet free_days = state.free_days;\n\t\t\tif ( DAYS.includes(action.key) ) {\n\t\t\t\tfree_days[ action.key ].index = action.value;\n\t\t\t}\n\t\t\treturn { ...state, free_days }\n\t\t}\n\t\tcase 'FREE_DAYS_PERMANENT': {\n\t\t\tlet free_days = state.free_days;\n\t\t\tif ( DAYS.includes(action.key) ) {\n\t\t\t\tfree_days[ action.key ].permanent = action.value;\n\t\t\t}\n\t\t\treturn { ...state, free_days }\n\t\t}\n\t\tcase 'SHIFTS_CREW': {\n\t\t\tlet shifts_crew = state.shifts_crew;\n\t\t\tif ( DAYS.includes(action.key) ) {\n\t\t\t\tshifts_crew[ action.key ][ action.shift ] = action.value;\n\t\t\t}\n\t\t\treturn { ...state, shifts_crew }\n\t\t}\n\t\tcase 'ABSENCES': {\n\t\t\tstate.is_absences_layer = ! state.is_absences_layer\n\t\t\tstate.is_time_layer = false\n\t\t\treturn { ...state }\n\t\t}\n\t\tcase 'BILLING_PERIOD_TYPE': {\n\t\t\treturn { ...state, billing_period_type: action.value }\n\t\t}\n\t\tcase 'BILLING_PERIOD': {\n\t\t\treturn { ...state, billing_period: action.value }\n\t\t}\n\t\tcase 'WORK_TIME': {\n\t\t\tstate.is_absences_layer = false\n\t\t\tstate.is_time_layer = ! state.is_time_layer\n\t\t\treturn { ...state }\n\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default settingsReducer;\n"]},"metadata":{},"sourceType":"module"}