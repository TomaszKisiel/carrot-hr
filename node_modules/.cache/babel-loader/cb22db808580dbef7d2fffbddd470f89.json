{"ast":null,"code":"var _jsxFileName = \"/home/tomek/projects/carrot-hr/src/components/Navigation.js\";\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Navbar, Button } from 'react-bootstrap';\nimport { onSettings } from '../reducers/navigation'; // const mapStateToProps = (state) => {\n//   \treturn {\n// \t\tschedules: state.schedules,\n// \t\tis_absences_layer: state.settings.is_absences_layer,\n// \t\tis_time_layer: state.settings.is_time_layer,\n// \t};\n// };\n// const mapDispatchToProps = (dispatch) => {\n// \treturn {\n// \t\tonSettings: () => dispatch({ type: 'SETTINGS'}),\n// \t\tonSave: () => dispatch({ type: 'SAVE' }),\n// \t\tonLoaded: (e) => dispatch({ type: 'LOADED', async: loaded(e.target.files[0]) }),\n// \t\tonGenerate: () => dispatch({ type: 'GENERATE' }),\n// \t\tonClear: () => dispatch({ type: 'CLEAR' }),\n// \t\tonAbsences: () => dispatch({ type: 'ABSENCES' }),\n// \t\tonWorkTime: () => dispatch({ type: 'WORK_TIME' }),\n// \t\tonUndo: () => dispatch({ type: 'UNDO' }),\n// \t\tonRedo: () => dispatch({ type: 'REDO' }),\n// \t}\n// };\n// const loaded = ( file ) => ( dispatch ) => {\n// \t// var reader = new FileReader();\n// \t// reader.onload = ((reader) => {\n// \t// \treturn () => {\n// \t// \t\tconst json = JSON.parse(reader.result);\n// \t// \t\t// dispatch(incrementByAmount(amount));\n// \t// \t\tconsole.log(\"SIPCIA\")\n// \t// \t}\n// \t// })(reader);\n// \t// reader.readAsText(file);\n// \tconsole.log(\"SIPCIA\", file)\n// };\n//\n// const ref = React.createRef();\n//\n// function LoadButton() {\n// \tconst dispatch = useDispatch();\n//\n// \treturn ( <>\n// \t\t<Button className=\"mr-4\" variant=\"outline-dark\" type=\"input\" onClick={ () => dispatch( loaded( \"HUJ\" ) ) } ><b> Wczytaj </b></Button>\n// \t\t<input ref={ ref } className=\"d-none\" type=\"file\" onChange={ (e) => dispatch( loaded( \"HUJ\" ) ) }/>\n// \t</> )\n// }\n\nexport default function Navigation() {\n  const dispatch = useDispatch(); // const { schedules, is_absences_layer, is_time_layer, onSettings, onSave, onLoaded, onGenerate, onClear, onAbsences, onWorkTime, onUndo, onRedo } = this.props;\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Navbar, {\n    bg: \"light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"mr-4\",\n    variant: \"outline-warning\",\n    onClick: () => dispatch(onSettings()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 99\n    }\n  }, \" Ustawienia \"))));\n} // <Button className=\"mr-4\" variant=\"outline-warning\" onClick={ onSettings } ><b> Ustawienia </b></Button>\n// <Button className=\"mr-2\" variant=\"outline-dark\" onClick={ onSave } ><b> Zapisz </b></Button>\n// <LoadButton />\n// <Button className=\"mr-2\" variant=\"outline-success\" onClick={ onGenerate } ><b> Generuj </b></Button>\n// <Button className=\"mr-4\" variant=\"outline-danger\" onClick={ onClear } ><b> Wyczyść </b></Button>\n// <Button className=\"mr-2\" variant=\"outline-info\" onClick={ onAbsences } ><b>\n// \t{ ( is_absences_layer === false ) ? \"Pokaż absencje\" : \"Ukryj absencje\" }\n// </b></Button>\n// <Button className=\"mr-4\" variant=\"outline-info\" onClick={ onWorkTime } ><b>\n// \t{ ( is_time_layer === false ) ? \"Pokaż czas pracy\" : \"Ukryj czas pracy\" }\n// </b></Button>\n// <Button className=\"mr-2\" variant=\"outline-dark\" onClick={ onUndo } ><b> Cofnij </b></Button>\n// <Button className=\"mr-2\" variant=\"outline-dark\" onClick={ onRedo } ><b> Przywróć </b></Button>\n// export default Navigation = connect(mapStateToProps, mapDispatchToProps)(Navigation);","map":{"version":3,"sources":["/home/tomek/projects/carrot-hr/src/components/Navigation.js"],"names":["React","useDispatch","Navbar","Button","onSettings","Navigation","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,iBAA/B;AACA,SAASC,UAAT,QAA2B,wBAA3B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,UAAT,GAAsB;AACpC,QAAMC,QAAQ,GAAGL,WAAW,EAA5B,CADoC,CAEpC;;AAEA,sBAAS,uDACR,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,MAAlB;AAAyB,IAAA,OAAO,EAAC,iBAAjC;AAAmD,IAAA,OAAO,EAAG,MAAMK,QAAQ,CAAEF,UAAU,EAAZ,CAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA+F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA/F,CADD,CADQ,CAAT;AAKA,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Navbar, Button } from 'react-bootstrap';\nimport { onSettings } from '../reducers/navigation'\n\n// const mapStateToProps = (state) => {\n//   \treturn {\n// \t\tschedules: state.schedules,\n// \t\tis_absences_layer: state.settings.is_absences_layer,\n// \t\tis_time_layer: state.settings.is_time_layer,\n// \t};\n// };\n// const mapDispatchToProps = (dispatch) => {\n// \treturn {\n// \t\tonSettings: () => dispatch({ type: 'SETTINGS'}),\n// \t\tonSave: () => dispatch({ type: 'SAVE' }),\n// \t\tonLoaded: (e) => dispatch({ type: 'LOADED', async: loaded(e.target.files[0]) }),\n// \t\tonGenerate: () => dispatch({ type: 'GENERATE' }),\n// \t\tonClear: () => dispatch({ type: 'CLEAR' }),\n// \t\tonAbsences: () => dispatch({ type: 'ABSENCES' }),\n// \t\tonWorkTime: () => dispatch({ type: 'WORK_TIME' }),\n// \t\tonUndo: () => dispatch({ type: 'UNDO' }),\n// \t\tonRedo: () => dispatch({ type: 'REDO' }),\n// \t}\n// };\n\n// const loaded = ( file ) => ( dispatch ) => {\n// \t// var reader = new FileReader();\n// \t// reader.onload = ((reader) => {\n// \t// \treturn () => {\n// \t// \t\tconst json = JSON.parse(reader.result);\n// \t// \t\t// dispatch(incrementByAmount(amount));\n// \t// \t\tconsole.log(\"SIPCIA\")\n// \t// \t}\n// \t// })(reader);\n// \t// reader.readAsText(file);\n// \tconsole.log(\"SIPCIA\", file)\n// };\n//\n// const ref = React.createRef();\n//\n// function LoadButton() {\n// \tconst dispatch = useDispatch();\n//\n// \treturn ( <>\n// \t\t<Button className=\"mr-4\" variant=\"outline-dark\" type=\"input\" onClick={ () => dispatch( loaded( \"HUJ\" ) ) } ><b> Wczytaj </b></Button>\n// \t\t<input ref={ ref } className=\"d-none\" type=\"file\" onChange={ (e) => dispatch( loaded( \"HUJ\" ) ) }/>\n// \t</> )\n// }\n\nexport default function Navigation() {\n\tconst dispatch = useDispatch();\n\t// const { schedules, is_absences_layer, is_time_layer, onSettings, onSave, onLoaded, onGenerate, onClear, onAbsences, onWorkTime, onUndo, onRedo } = this.props;\n\n\treturn ( <>\n\t\t<Navbar bg=\"light\">\n\t\t\t<Button className=\"mr-4\" variant=\"outline-warning\" onClick={ () => dispatch( onSettings() ) } ><b> Ustawienia </b></Button>\n\t\t</Navbar>\n\t</> )\n}\n\n// <Button className=\"mr-4\" variant=\"outline-warning\" onClick={ onSettings } ><b> Ustawienia </b></Button>\n// <Button className=\"mr-2\" variant=\"outline-dark\" onClick={ onSave } ><b> Zapisz </b></Button>\n// <LoadButton />\n// <Button className=\"mr-2\" variant=\"outline-success\" onClick={ onGenerate } ><b> Generuj </b></Button>\n// <Button className=\"mr-4\" variant=\"outline-danger\" onClick={ onClear } ><b> Wyczyść </b></Button>\n// <Button className=\"mr-2\" variant=\"outline-info\" onClick={ onAbsences } ><b>\n// \t{ ( is_absences_layer === false ) ? \"Pokaż absencje\" : \"Ukryj absencje\" }\n// </b></Button>\n// <Button className=\"mr-4\" variant=\"outline-info\" onClick={ onWorkTime } ><b>\n// \t{ ( is_time_layer === false ) ? \"Pokaż czas pracy\" : \"Ukryj czas pracy\" }\n// </b></Button>\n// <Button className=\"mr-2\" variant=\"outline-dark\" onClick={ onUndo } ><b> Cofnij </b></Button>\n// <Button className=\"mr-2\" variant=\"outline-dark\" onClick={ onRedo } ><b> Przywróć </b></Button>\n\n// export default Navigation = connect(mapStateToProps, mapDispatchToProps)(Navigation);\n"]},"metadata":{},"sourceType":"module"}