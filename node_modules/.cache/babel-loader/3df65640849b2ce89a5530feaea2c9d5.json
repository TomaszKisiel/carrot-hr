{"ast":null,"code":"var _jsxFileName = \"/home/tomek/Social_Media/CarrotStudio/CarrotHR/src/Components/EmployeesTableManager.js\";\nimport React, { Component } from 'react';\n\nconst format = require('date-format');\n\nconst days = [\"sun\", \"mon\", \"tue\", \"wed\", \"thu\", \"fri\", \"sat\"];\n\nlet getDayName = date => {\n  let dt = new Date(date);\n  return days[dt.getDay()];\n};\n\nconst days_PL = [\"ND\", \"PN\", \"WT\", \"ÅšR\", \"CZ\", \"PT\", \"SB\"];\n\nlet getPolishDayName = date => {\n  let dt = new Date(date);\n  return days_PL[dt.getDay()];\n};\n\nfunction TableHeader(props) {\n  let tr = [];\n  tr.push( /*#__PURE__*/React.createElement(\"th\", {\n    key: \"number-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 10\n    }\n  }, \"#\"));\n  tr.push( /*#__PURE__*/React.createElement(\"th\", {\n    className: \"border-right\",\n    key: \"signature-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 10\n    }\n  }, \"Pracownik\"));\n\n  for (const date of props.dates) {\n    // const dt = new Date(date)\n    tr.push( /*#__PURE__*/React.createElement(\"th\", {\n      \"data-date\": date,\n      key: date,\n      className: \"border-right text-center p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      class: \"px-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 89\n      }\n    }, format.asString('dd.MM', new Date(date))), /*#__PURE__*/React.createElement(\"hr\", {\n      class: \"m-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 159\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      class: \"px-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 176\n      }\n    }, getPolishDayName(date))));\n  }\n\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    key: \"tr-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 14\n    }\n  }, tr);\n}\n\nfunction TableData(props) {\n  let tbody = []; // function compare(a, b) {\n  // \tconst stateA = a.is_super_manager || a.is_manager;\n  // \tconst stateB = b.is_super_manager;\n  //\n  // \tlet comparison = 0;\n  // \tif (stateA > stateB) {\n  // \t\tcomparison = 1;\n  // \t} else if (stateA < stateB) {\n  // \t\tcomparison = -1;\n  // \t}\n  // \treturn (comparison * -1)\n  // }\n  //\n  // props.employees.sort(compare)\n\n  for (const [i, employee] of props.employees.entries()) {\n    const tr = [];\n    tr.push( /*#__PURE__*/React.createElement(\"th\", {\n      key: \"number-\" + employee.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, i + 1));\n    tr.push( /*#__PURE__*/React.createElement(\"th\", {\n      className: \"border-right\",\n      key: \"signature-\" + employee.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, employee.signature));\n\n    for (const date of props.dates) {\n      const schedule = props.schedules.find(schedule => {\n        return schedule.employee_id == employee.id && schedule.date == date;\n      });\n      let begin = schedule ? schedule.begin : \"\";\n      let end = schedule ? schedule.begin : \"\"; // let shift = ( schedule ) ? schedule.shift : \"\";\n      // let holiday = props.settings.holidays.find( holiday => { return ( holiday.date == date ) });\n\n      let tdClassName = \"border-right\"; // if ( getDayName(date) == \"sun\" ) tdClassName += \" carrotHR__field--sunday\";\n      // if ( schedule && schedule.preference ) tdClassName += \" carrotHR__field--preference\";\n      // if ( holiday ) tdClassName += \" carrotHR__field--holiday\";\n      // let inputDisabled = false;\n\n      let inputClassName = \"carrotHR__input carrotHR__input--shift form-control\";\n      tr.push( /*#__PURE__*/React.createElement(\"td\", {\n        id: employee.id + \":\" + date,\n        key: employee.id + \":\" + date,\n        className: tdClassName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        \"data-date-id\": date,\n        \"data-employee-id\": employee.id,\n        className: inputClassName,\n        onChange: props.onScheduleChange,\n        value: shift,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 6\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        \"data-date-id\": date,\n        \"data-employee-id\": employee.id,\n        className: inputClassName,\n        onChange: props.onScheduleChange,\n        value: shift,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 6\n        }\n      })));\n    }\n\n    let trClassName = \"\"; // if ( employee.is_super_manager == true ) trClassName += \" carrotHR__row--super-manager\"\n    // if ( employee.is_manager == true ) trClassName += \" carrotHR__row--manager\"\n\n    tbody.push( /*#__PURE__*/React.createElement(\"tr\", {\n      class: trClassName,\n      key: employee.id,\n      draggable: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 14\n      }\n    }, tr));\n  }\n\n  return tbody;\n}\n\nfunction TableNewRow(props) {\n  const tr = [];\n  tr.push( /*#__PURE__*/React.createElement(\"th\", {\n    key: \"order-new\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 10\n    }\n  }, \"#\"));\n  tr.push( /*#__PURE__*/React.createElement(\"th\", {\n    key: \"signature-new\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    key: \"signature-input-new\",\n    onKeyDown: props.onNewEmployee,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 34\n    }\n  })));\n\n  for (const date of props.dates) {\n    tr.push( /*#__PURE__*/React.createElement(\"td\", {\n      key: date,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    key: \"signature-tr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, tr);\n}\n\nexport default class EmployeesTableManager extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"table\", {\n      className: \"carrotHR__table table table-hover table-striped mb-0 text-nowrap border-top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(TableHeader, {\n      dates: this.props.dates,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 6\n      }\n    })), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(TableData, {\n      settings: this.props.settings,\n      employees: this.props.employees,\n      dates: this.props.dates,\n      schedules: this.props.schedules,\n      onScheduleChange: this.props.onScheduleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(TableNewRow, {\n      dates: this.props.dates,\n      onNewEmployee: this.props.onNewEmployee,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 6\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/home/tomek/Social_Media/CarrotStudio/CarrotHR/src/Components/EmployeesTableManager.js"],"names":["React","Component","format","require","days","getDayName","date","dt","Date","getDay","days_PL","getPolishDayName","TableHeader","props","tr","push","dates","asString","TableData","tbody","i","employee","employees","entries","id","signature","schedule","schedules","find","employee_id","begin","end","tdClassName","inputClassName","onScheduleChange","shift","trClassName","TableNewRow","onNewEmployee","EmployeesTableManager","constructor","render","settings"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nconst format = require('date-format');\r\n\r\nconst days = [\"sun\", \"mon\", \"tue\", \"wed\", \"thu\", \"fri\", \"sat\"];\r\nlet getDayName = (date) => {\r\n\tlet dt = new Date(date);\r\n\treturn days[dt.getDay()];\r\n}\r\n\r\nconst days_PL = [\"ND\", \"PN\", \"WT\", \"ÅšR\", \"CZ\", \"PT\", \"SB\"];\r\nlet getPolishDayName = (date) => {\r\n\tlet dt = new Date(date);\r\n\treturn days_PL[dt.getDay()];\r\n}\r\n\r\nfunction TableHeader(props) {\r\n\tlet tr = []\r\n\r\n\ttr.push(<th key=\"number-header\" >#</th>)\r\n\ttr.push(<th className=\"border-right\" key=\"signature-header\">Pracownik</th>)\r\n\r\n    for ( const date of props.dates ) {\r\n\t\t// const dt = new Date(date)\r\n      \ttr.push(<th data-date={date} key={date} className=\"border-right text-center p-0\"><span class=\"px-3\">{ format.asString('dd.MM', new Date(date)) }</span><hr class=\"m-0\"/><span class=\"px-3\">{ getPolishDayName(date) }</span></th>)\r\n    }\r\n    return ( <tr key=\"tr-header\">{ tr }</tr> )\r\n}\r\n\r\nfunction TableData(props) {\r\n\tlet tbody = []\r\n\r\n\t// function compare(a, b) {\r\n\t// \tconst stateA = a.is_super_manager || a.is_manager;\r\n\t// \tconst stateB = b.is_super_manager;\r\n\t//\r\n\t// \tlet comparison = 0;\r\n\t// \tif (stateA > stateB) {\r\n\t// \t\tcomparison = 1;\r\n\t// \t} else if (stateA < stateB) {\r\n\t// \t\tcomparison = -1;\r\n\t// \t}\r\n\t// \treturn (comparison * -1)\r\n\t// }\r\n\t//\r\n\t// props.employees.sort(compare)\r\n\r\n\tfor ( const [i, employee] of props.employees.entries() ) {\r\n\t\tconst tr = []\r\n\r\n\t\ttr.push(<th key={ \"number-\" + employee.id }>{ i + 1 }</th>)\r\n\t\ttr.push(<th className=\"border-right\" key={ \"signature-\" + employee.id }>{ employee.signature }</th>)\r\n\r\n\t\tfor ( const date of props.dates ) {\r\n\t\t\tconst schedule = props.schedules.find(schedule => { return (\r\n\t\t\t\tschedule.employee_id == employee.id &&\r\n\t\t\t\tschedule.date == date\r\n\t\t\t)});\r\n\r\n\r\n\t\t\tlet begin = ( schedule ) ? schedule.begin : \"\";\r\n\t\t\tlet end = ( schedule ) ? schedule.begin : \"\";\r\n\t\t\t// let shift = ( schedule ) ? schedule.shift : \"\";\r\n\r\n\t\t\t// let holiday = props.settings.holidays.find( holiday => { return ( holiday.date == date ) });\r\n\r\n\t\t\tlet tdClassName = \"border-right\";\r\n\t\t\t// if ( getDayName(date) == \"sun\" ) tdClassName += \" carrotHR__field--sunday\";\r\n\t\t\t// if ( schedule && schedule.preference ) tdClassName += \" carrotHR__field--preference\";\r\n\t\t\t// if ( holiday ) tdClassName += \" carrotHR__field--holiday\";\r\n\r\n\t\t\t// let inputDisabled = false;\r\n\r\n\t\t\tlet inputClassName = \"carrotHR__input carrotHR__input--shift form-control\";\r\n\r\n\t\t\ttr.push(\r\n\t\t\t\t<td id={employee.id + \":\" + date} key={ employee.id + \":\" + date} className={ tdClassName }>\r\n\t\t\t\t\t<input data-date-id={date} data-employee-id={employee.id} className={ inputClassName } onChange={props.onScheduleChange} value={ shift } />\r\n\t\t\t\t\t<input data-date-id={date} data-employee-id={employee.id} className={ inputClassName } onChange={props.onScheduleChange} value={ shift } />\r\n\t\t\t\t</td>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tlet trClassName = \"\";\r\n\t\t// if ( employee.is_super_manager == true ) trClassName += \" carrotHR__row--super-manager\"\r\n\t\t// if ( employee.is_manager == true ) trClassName += \" carrotHR__row--manager\"\r\n\r\n\t\ttbody.push(<tr class={ trClassName } key={ employee.id } draggable>{ tr }</tr>)\r\n\t}\r\n\r\n\treturn tbody;\r\n}\r\n\r\nfunction TableNewRow(props) {\r\n\tconst tr = [];\r\n\ttr.push(<th key=\"order-new\">#</th>)\r\n\ttr.push(<th key=\"signature-new\"><input key=\"signature-input-new\" onKeyDown={ props.onNewEmployee } /></th>)\r\n\r\n\tfor ( const date of props.dates ) {\r\n\t\ttr.push(<td key={date}></td>)\r\n\t}\r\n\r\n\treturn ( <tr key=\"signature-tr\">{ tr }</tr> );\r\n}\r\n\r\nexport default class EmployeesTableManager extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<table className=\"carrotHR__table table table-hover table-striped mb-0 text-nowrap border-top\">\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<TableHeader dates={ this.props.dates }/>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t<TableData settings={ this.props.settings } employees={ this.props.employees } dates={ this.props.dates } schedules={ this.props.schedules } onScheduleChange={this.props.onScheduleChange}/>\r\n\t\t\t\t\t<TableNewRow dates={ this.props.dates } onNewEmployee={ this.props.onNewEmployee }/>\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t)\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}