{"ast":null,"code":"const moment = require('moment');\n\nconst initialState = {\n  employee_next_id: 1,\n  employees: [],\n  schedules: [],\n  dates: []\n};\n\nconst navigationReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SAVE':\n      {\n        const file = new Blob([JSON.stringify(state)], {\n          type: 'application/json'\n        }) || null;\n        const element = document.createElement(\"a\");\n        element.href = URL.createObjectURL(file);\n        element.download = moment().format(\"YYYY-MM-DD HH:mm:ss\") || \"CarrotHR - ZAPIS\";\n        document.body.appendChild(element);\n        element.click();\n        return { ...state\n        };\n      }\n\n    case 'LOADED':\n      {\n        let obj = action.payload;\n        console.log(obj);\n        state.settings = obj.settings;\n        state.employees = obj.employees;\n        state.next_employee_id = obj.next_employee_id;\n        state.schedules = obj.schedules;\n        state.dates = obj.dates;\n        return { ...state\n        };\n      }\n\n    case 'GENERATE':\n      {\n        console.log(state); // let schedules = state.schedules.slice()\n        // schedules.push({ id: 'XC2ad-aw@23a;2#;bTEr[21BvcD]', status: 'success' })\n        // return { ...state, schedules }\n\n        return { ...state\n        };\n      }\n\n    case 'CLEAR':\n      {\n        let schedules = state.schedules.slice();\n        schedules.length = 0;\n        return { ...state,\n          schedules\n        };\n      }\n\n    case 'UNDO':\n      {\n        return { ...state\n        };\n      }\n\n    case 'REDO':\n      {\n        return { ...state\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default navigationReducer;","map":{"version":3,"sources":["/home/tomek/projects/carrot-hr/src/reducers/navigation.js"],"names":["moment","require","initialState","employee_next_id","employees","schedules","dates","navigationReducer","state","action","type","file","Blob","JSON","stringify","element","document","createElement","href","URL","createObjectURL","download","format","body","appendChild","click","obj","payload","console","log","settings","next_employee_id","slice","length"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AAEA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,gBAAgB,EAAE,CADE;AAEpBC,EAAAA,SAAS,EAAE,EAFS;AAGpBC,EAAAA,SAAS,EAAE,EAHS;AAIpBC,EAAAA,KAAK,EAAE;AAJa,CAArB;;AAOA,MAAMC,iBAAiB,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AAC3D,UAAQA,MAAM,CAACC,IAAf;AACC,SAAK,MAAL;AAAa;AACZ,cAAMC,IAAI,GAAG,IAAIC,IAAJ,CAAU,CAAEC,IAAI,CAACC,SAAL,CAAgBN,KAAhB,CAAF,CAAV,EAAuC;AAAEE,UAAAA,IAAI,EAAE;AAAR,SAAvC,KAAyE,IAAtF;AAEA,cAAMK,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAhB;AACAF,QAAAA,OAAO,CAACG,IAAR,GAAeC,GAAG,CAACC,eAAJ,CAAqBT,IAArB,CAAf;AACAI,QAAAA,OAAO,CAACM,QAAR,GAAmBrB,MAAM,GAAGsB,MAAT,CAAgB,qBAAhB,KAA0C,kBAA7D;AACAN,QAAAA,QAAQ,CAACO,IAAT,CAAcC,WAAd,CAA0BT,OAA1B;AACAA,QAAAA,OAAO,CAACU,KAAR;AAEA,eAAO,EAAE,GAAGjB;AAAL,SAAP;AACA;;AACD,SAAK,QAAL;AAAe;AACd,YAAIkB,GAAG,GAAGjB,MAAM,CAACkB,OAAjB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACAlB,QAAAA,KAAK,CAACsB,QAAN,GAAiBJ,GAAG,CAACI,QAArB;AACAtB,QAAAA,KAAK,CAACJ,SAAN,GAAkBsB,GAAG,CAACtB,SAAtB;AACAI,QAAAA,KAAK,CAACuB,gBAAN,GAAyBL,GAAG,CAACK,gBAA7B;AACAvB,QAAAA,KAAK,CAACH,SAAN,GAAkBqB,GAAG,CAACrB,SAAtB;AACAG,QAAAA,KAAK,CAACF,KAAN,GAAcoB,GAAG,CAACpB,KAAlB;AACA,eAAO,EAAE,GAAGE;AAAL,SAAP;AACA;;AACD,SAAK,UAAL;AAAiB;AAChBoB,QAAAA,OAAO,CAACC,GAAR,CAAYrB,KAAZ,EADgB,CAEhB;AACA;AACA;;AACA,eAAO,EAAE,GAAGA;AAAL,SAAP;AACA;;AACD,SAAK,OAAL;AAAc;AACb,YAAIH,SAAS,GAAGG,KAAK,CAACH,SAAN,CAAgB2B,KAAhB,EAAhB;AACA3B,QAAAA,SAAS,CAAC4B,MAAV,GAAmB,CAAnB;AACA,eAAO,EAAE,GAAGzB,KAAL;AAAYH,UAAAA;AAAZ,SAAP;AACA;;AACD,SAAK,MAAL;AAAa;AACZ,eAAO,EAAE,GAAGG;AAAL,SAAP;AACA;;AACD,SAAK,MAAL;AAAa;AACZ,eAAO,EAAE,GAAGA;AAAL,SAAP;AACA;;AACD;AACC,aAAOA,KAAP;AAzCF;AA2CA,CA5CD;;AA8CA,eAAeD,iBAAf","sourcesContent":["const moment = require('moment')\n\nconst initialState = {\n\temployee_next_id: 1,\n\temployees: [],\n\tschedules: [],\n\tdates: [],\n}\n\nconst navigationReducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase 'SAVE': {\n\t\t\tconst file = new Blob( [ JSON.stringify( state ) ], { type: 'application/json' } ) || null;\n\n\t\t\tconst element = document.createElement(\"a\");\n\t\t\telement.href = URL.createObjectURL( file );\n\t\t\telement.download = moment().format(\"YYYY-MM-DD HH:mm:ss\") || \"CarrotHR - ZAPIS\";\n\t\t\tdocument.body.appendChild(element);\n\t\t\telement.click();\n\n\t\t\treturn { ...state };\n\t\t}\n\t\tcase 'LOADED': {\n\t\t\tlet obj = action.payload;\n\t\t\tconsole.log(obj);\n\t\t\tstate.settings = obj.settings;\n\t\t\tstate.employees = obj.employees;\n\t\t\tstate.next_employee_id = obj.next_employee_id;\n\t\t\tstate.schedules = obj.schedules;\n\t\t\tstate.dates = obj.dates;\n\t\t\treturn { ...state };\n\t\t}\n\t\tcase 'GENERATE': {\n\t\t\tconsole.log(state);\n\t\t\t// let schedules = state.schedules.slice()\n\t\t\t// schedules.push({ id: 'XC2ad-aw@23a;2#;bTEr[21BvcD]', status: 'success' })\n\t\t\t// return { ...state, schedules }\n\t\t\treturn { ...state }\n\t\t}\n\t\tcase 'CLEAR': {\n\t\t\tlet schedules = state.schedules.slice()\n\t\t\tschedules.length = 0\n\t\t\treturn { ...state, schedules }\n\t\t}\n\t\tcase 'UNDO': {\n\t\t\treturn { ...state }\n\t\t}\n\t\tcase 'REDO': {\n\t\t\treturn { ...state }\n\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default navigationReducer;\n"]},"metadata":{},"sourceType":"module"}